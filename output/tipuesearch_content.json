{"pages":[{"text":"I am a chartered engineer with a PhD in computational mechanics. I've spent time in the aerospace industry, doing analysis of metals and composites, and hacking away in Matlab, Python, Perl, Fortran, Abaqus and probably a few other languages too. This blog has been started with the intention of consolidating stuff that was on my old Google sites page, Evernote, Google Keep, OneNote and Tumblr. I'll also try to documenting a few things that I'd rather not forget, but who knows where it will end up. PGP lookup: 6A29 CF02 E7D2 8009 CAAD 10DF 227D 65AB 0396 DE9A","tags":"misc","url":"//amit.visrolia.net/pages/amit.html","title":"About me"},{"text":"Authored by Amit Generated by Pelican Theme taken from flex by Alexandre Vicenzi Search using Tipue Search Pelican plugin \\(\\LaTeX\\) rendering using render_math Licences Unless otherwise specified, everything of my own that I share here is shared under the Creative Commons Attribution-NonCommercial 4.0 International License . if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"misc","url":"//amit.visrolia.net/pages/credits.html","title":"Credits"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/cornwall2018.html","title":"Cornwall"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/genoa.html","title":"Genoa"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/manarola.html","title":"Manarola"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/parma.html","title":"Parma"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/speedboat.html","title":"Lake Garda"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/sirmione.html","title":"Sirmione"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/bologna.html","title":"Bologna"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/gradara.html","title":"Gradara"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/ravenna.html","title":"Ravenna"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/urbino.html","title":"Urbino"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/ascoli_piceno.html","title":"Ascoli Piceno"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/sirolo_numana.html","title":"Sirolo and Numana"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/brecon2018.html","title":"Brecon Beacons"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/broadway.html","title":"Broadway"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/exmoor.html","title":"Exmoor"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/chester.html","title":"Chester"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/chirk.html","title":"Chirk"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/lake_district.html","title":"Lake District"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/stratford.html","title":"Stratford-upon-Avon"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/bristol_snow.html","title":"Snow in Bristol"},{"text":"From The Guardian Part 1 Part 2 Part 3 Part 4","tags":"Links","url":"//amit.visrolia.net/10poundmeals.html","title":"20 best recipes under Â£10 for four people"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/verona.html","title":"Verona"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/cosenza.html","title":"Cosenza, Calabria"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/basel.html","title":"Basel"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/vaduz.html","title":"Vaduz"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/lugano.html","title":"Lugano"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/lucerne.html","title":"Lucerne"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/sintra.html","title":"Sintra"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/lisbon.html","title":"Lisbon"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/coimbra.html","title":"Coimbra"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/porto.html","title":"Porto"},{"text":"First ever triathlon (of more to come?)!","tags":"Pictures","url":"//amit.visrolia.net/foremarke.html","title":"Foremarke Hall Sprint Triathlon"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/uppsala.html","title":"Uppsala"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/stockholm.html","title":"Stockholm"},{"text":"Cooper's Hill, Gloucestershire","tags":"Pictures","url":"//amit.visrolia.net/cheeserolling.html","title":"Cheese rolling"},{"text":"Chirk and Pontcysyllte canal aqueducts","tags":"Pictures","url":"//amit.visrolia.net/llangollen.html","title":"Kayaking on the Llangollen Canal"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/walesrt.html","title":"Wales road trip"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/pisa.html","title":"Pisa"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/florence.html","title":"Florence"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/paris.html","title":"Paris in spring"},{"text":"What is Scrapy? Scrapy is an awesome web scraper using Python. I've done my own web scraping before using BeautifulSoup, but it required a lot of writing supporting code around it, and it was slow. Scrapy has most of what I need built in, and it is fast because it implements a scheduler and a parallel downloader. Installation and documentation I installed Scrapy in a Conda environment - the default Conda repo doesn't have the latest version, but Scrapy does provide the latest version in Conda-forge (the community repo). It can be installed from here : conda install -c conda-forge scrapy = 1 .3.0 The documentation is here , and includes a good tutorial to get started. These are just my notes from having followed the tutorial. The tutorial example uses the following quotes website as an example site to scrape: http://quotes.toscrape.com/page/1/ Using CSS selectors Scrapy has a couple of different methods for extracting data from a page, but the only one I've used is CSS selectors. This seems to be fairly simple. To get a feel for how Scrapy works, we can bring up an interactive Scrapy shell: scrapy shell 'http://quotes.toscrape.com/page/1/' This pulls the target website into a local response object that we can start querying. Starting a project Defining items and a Spider Running the spider","tags":"Notes","url":"//amit.visrolia.net/scrapy.html","title":"Scrapy"},{"text":"What makes a material function? This Review of Materials Modelling describes modelling of materials, their properties and use in industrial applications illustrated by H2020 LEIT NMBP Materials projects. The future of the European industry is associated with a strong modelling capacity. An efficient modelling approach is needed to shorten the development process of materials-enabled products. This Review of Materials Modelling shows that industry is a very active player both in modelling for production and in modelling research areas. Industry identifies the specifications for material properties and the modelling then finds which material composition can meet the specs and how production can be done. This \"Materials by Design\" approach has been supported during the last decade in the EU Framework Programmes. Application areas of modelling span all industrial sectors. The bulk of the projects are applying existing models to new materials, which shows that the current state of the art of modelling can be characterised as \"mature\".","tags":"Links","url":"//amit.visrolia.net/eumaterial.html","title":"What makes a material function?"},{"text":"Stepping from Matlab to Python From Python to Numpy ( source ) Numpy for Matlab users","tags":"Links","url":"//amit.visrolia.net/numpy.html","title":"Learning numpy"},{"text":"Ten places to go stargazing in the Brecon Beacons National Park dark sky reserve","tags":"Links","url":"//amit.visrolia.net/brecon.html","title":"Stargazing places in Brecon Beacons"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/st_pauls.html","title":"St. Paul's Cathedral"},{"text":"An enclave is a territory, or a part of a territory, that is entirely surrounded by the territory of one other state. An exclave is a portion of a state or territory geographically separated from the main part by surrounding alien territory (of one or more states). West Berlin was a famous enclave, of West Germany, surrounded by East Germany. Enclaves/exclaves don't have to be surrounded entirely by other countries (they can have sea borders), but they're more fun if they do. Kaliningrad Oblast is a fairly large chunk of Russia that sits in Europe, between Lithuania and Poland. Most enclaves are the result of moving borders, either for political reasons or natural reasons (e.g. the border followed a river which has drifted). There were lots of enclaves between countries such as England and Wales, and between India and Bangladesh. The most fun enclave is Nahwa in the UAE . It is a second order enclave, since it is a territory of the UAE , entirely surrounded by a part of Oman which itself is an enclave within UAE . It isn't the only example of a second order enclave, there are parts of [Baarle-Hertog and Baarle-Nassau] [baarle] in Belgium/The Netherlands that are inside one-another. While we're here, a reminder that there are two countries that are double-landlocked: that is, landlocked, and surrounded entirely by countries that are themselves landlocked. They are Liechtenstein , surrounded by Switzerland and Austria, and Uzbekistan , surrounded by Afghanistan, Kazakhstan, Kyrgyzstan, Tajikistan, and Turkmenistan.","tags":"Notes","url":"//amit.visrolia.net/enclaves.html","title":"Enclaves and exclaves"},{"text":"Margam Country Park, South Wales 1:03:43, on trails with 239m climbing!","tags":"Pictures","url":"//amit.visrolia.net/tough10.html","title":"Cancer Research Tough 10"},{"text":"Using hdparm , to determine the current state: hdparm -B /dev/sda To set the parameters: hdparm -B 127 -S 36 -M /dev/sda -B sets advanced pover management: values below 128 permit spin-down -S sets the spin-down time, in multiples of 5 seconds. 36 here represents 3 minutes -M sets Automatic Acoustic Management (if the feature is supported on the HDD ) To set these values persistently, add a udev rule, e.g. /etc/udev/rules.d/50-hdparm.rules : ACTION == \"add\" , SUBSYSTEM == \"block\" , KERNEL == \"sda\" , RUN += \"/sbin/hdparm -B 127 -S 36 -M /dev/sda\" This will set the APM level on boot, but it might get reset after sleeping. To get around this, add a systemd service /etc/systemd/system/apm.service : [ Unit ] Description = Local system resume actions After = suspend.target hybrid-sleep.target hibernate.target [ Service ] Type = simple ExecStart = /sbin/hdparm -B 127 -S 36 -M /dev/sda [ Install ] WantedBy = sleep.target Then either start the service (for this session): systemctl start apm.service or enable the service to automatically start for all sessions: systemctl enable apm.service","tags":"Notes","url":"//amit.visrolia.net/hdparm.html","title":"Spin down hard disk drives in Linux"},{"text":"Scientific data analysis and visualization with Python, VTK and ParaView (pdf)","tags":"Notes","url":"//amit.visrolia.net/vtk_tutorial.html","title":"VTK tutorial"},{"text":"Anaconda is a Python distribution and package manager that might be a bit nicer than using virtualenv s and pip . To set up a new environment using Anaconda: 1 conda create --name <envname> python = 3 .5 The environment is created in the Anaconda installation directory. To activate and deactivate the environment: 1 2 source activate <envname> source deactivate <envname> In the terminal, the prompt will be preceded by <envname> when the environment is active. If you want to delete the environment, find out the name of it and remove: 1 2 conda info --envs conda remove --name <envname> --all The useful thing about Anaconda environments is that they can be exported and shared with code: 1 conda env export > environment.yml Then, someone else doing development on the same code base can set up an identical environment: 1 conda env create -f environment.yml When the environment is active, packages can be searched for and installed as follows: 1 2 conda search numpy conda install numpy The packages within the Anaconda environment can be listed by: 1 conda list To update any of the packages: 1 conda update <packagename> where <packagename> is any of the listed packages, including python .","tags":"Notes","url":"//amit.visrolia.net/anaconda.html","title":"Anaconda environments"},{"text":"\\(\\alpha(t)\\) - degree of crystallization $$\\alpha = \\frac{\\text{crystallized volume}}{\\text{ultimate crystallizable volume}} = \\frac{x_c(t,T)}{x_\\infty}$$ The Avrami equation describes how solids transform from one phase (state of matter) to another at constant temperature. It can specifically describe the kinetics of crystallisation, but can be applied generally to other changes of phase in materials, like chemical reaction rates: $$\\alpha(t) = 1 - \\exp\\left[ -k(T).t&#94;n \\right] $$ where n is the Avrami exponent. For non-isothermal processes, the Nakamura equation can be used: $$\\alpha(t) = 1 - \\exp\\left[ -\\left\\{ \\int_0&#94;t k(T,\\tau) \\mathrm{d}\\tau \\right\\}&#94;n \\right] $$ or: $$\\frac{\\mathrm{d}\\alpha}{\\mathrm{d}t} = nk(T)(1-\\alpha) \\left[ \\ln\\left( \\frac{1}{1-\\alpha} \\right) \\right]&#94;{(n-1)/n} $$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Notes","url":"//amit.visrolia.net/tpcrystallization.html","title":"Thermoplastic crystallization"},{"text":"For whatever reason, I can't get VTK to install in my virtualenv. So, the horrible hack I am using is to symlink the system package to my virtualenv: ln -s /usr/lib64/python3.5/site-packages/vtk ~/PATH/TO/VIRTUALENV/lib64/python3.5/site-packages/","tags":"Notes","url":"//amit.visrolia.net/vtk.html","title":"virtualenv and VTK"},{"text":"There are a number of \"games\" available, both casual downloadable games and those that purport to be more \"scientific\", that make the claim that they are a way to either improve cognitive function, or to decrease the rate of cognitive decline. In this fairly comprehensive work, Do \"brain-training\" programs work? , a review is conducted of the literature which has previously found countering claims of the efficiacy or otherwise of these games. The main conclusion is that brain-training programs have pleny of evidence of improving performance on the brain-training program itself, but less and less evidence of the improvement of performance on other real-world tasks as they get less related to the direct task in the game. In other words, they're probably bullshit. It's an interesting work, because it looks not only at the science behind brain training, but at the whole industry and their promotion of the idea that these programs work. Further, it looks at the role of journalists and the media, and policymakers, who can give an air of legitimacy to what is most likely pseudoscience (though it might not have been clear that it was pseudoscience at the time, it should have been clear that the evidence was weak).","tags":"Notes","url":"//amit.visrolia.net/braintraining.html","title":"Brain-training programs"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/glasgow.html","title":"Glasgow"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/vienna2.html","title":"Vienna"},{"text":"Wedding in Szombathely","tags":"Pictures","url":"//amit.visrolia.net/hungary.html","title":"Hungary"},{"text":"How to write unmaintainable code","tags":"Links","url":"//amit.visrolia.net/unmaintainable.html","title":"How to write unmaintainable code"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/gnr2016.html","title":"Great North Run"},{"text":"1 2 3 4 5 6 7 8 9 pdftk $1 burst output %04d_A.pdf pdftk $2 burst output %04d_B.pdf rm $1 rm $2 pdftk *.pdf cat output output.pdf rm ????_?.pdf","tags":"Notes","url":"//amit.visrolia.net/interleavepdf.html","title":"Interleaving two pdf files"},{"text":"1 gs -o $output -sDEVICE = pdfwrite -c \"[/CropBox [ $x0 $y0 $x1 $y1 ]\" -c \" /PAGES pdfmark\" -f $1","tags":"Notes","url":"//amit.visrolia.net/croppdf.html","title":"Cropping a pdf file"},{"text":"The Guardian","tags":"Links","url":"//amit.visrolia.net/frenchparks.html","title":"10 of the best National Parks in France"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/sanfermin.html","title":"San Fermin"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/dragon.html","title":"Bristol Dragon Boat Race"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/cornwall.html","title":"Cornwall"},{"text":"Building Complex Machines Using LEGO","tags":"Links","url":"//amit.visrolia.net/antikythera.html","title":"Antikythera mechanism in Lego"},{"text":"Eggs have two main parts: the yolk, and the white. The shell isn't much use for cooking. The white The white of the egg is a suspension of proteins in water. The main role of the egg white in a recipe is to add volume to a bake. This is most obvious when whipping the egg white, to create a foam, though it still has a simiular effect when mixed into a cake batter. By creating bubbles that entrap gas, the volume increases when the gas is heated up. The use of egg whites is most evident in meringues and soufflÃ©s. The scientific bit is that whipping the egg denatures the proteins, which have hydrophobic and hydrophilic groups. So, the denatured protein chains tangle, and hold onto or push away from the water content, forming the foam. When using eggs to entrap gas, futher stabilizers can be added to help maintain the structure of the foam. Something acidic adds more H+ ions to the mix, thus holding on more tightly to the hydrophilic groups. Lemon juice and cream of tartar can be used to fulfil this function. Sugar can also be used as a stabilizer. I'm not sure how that works. The yolk The yolk of an egg is mostly fat, and it's the tasty part of the egg. Its use in baking is as an emulsifier, i.e. its ability to hold water and fats together. This is used in, for example, mayonnaise, hollandaise etc. When an egg yolk is heated, the proteins denature and tangle, to thicken a product. Heat too much, and it forms into lumps, but gently heating, this can be used to thicken a sauce. An example of this is crÃ¨me pÃ¢tissiÃ¨re. Why egg yolk messes up an egg white foam The egg yolk is fatty. Fat molecules are also hydrophobic/philic in places, however they are much smaller than the proteins and unable to interconnect to form a network that eventually forms a foam. As a result, the presence of fat (e.g. egg yolk) prevents the formation of a good egg white foam.","tags":"Notes","url":"//amit.visrolia.net/eggs.html","title":"The science of eggs"},{"text":"Innovative Makes a product useful Aesthetic Makes a product understandable Unobtrusive Honest Long-lasting Thorough down to the last detail Environmentally friendly As little design as possible","tags":"Notes","url":"//amit.visrolia.net/rams.html","title":"Principles of good design"},{"text":"This 90-day plan has a few tips that I think might be quite a useful target for me. In summary: Day 0 - Accept that this is a different job, with different objectives and responsibilities. Understand where I fit with my team , my peers , and my manager . Days 1-30 - Study! Read up formally about leadership and management. Find a mentor. Don't hide the fact that I'm learning and don't initially know what I'm doing. Days 31-60 - Find a rhythm - a regular schedule. An event loop defines what I should be doing daily, weekly and monthly, for my team, the teams projects, processes, and for myself. Days 61-90 - Self assessment. Now I'll know what the job is about, I can ask myself Am I any good at this? Have I learnt my teams capabilities, can I see where I'm adding value? Do I really want this?","tags":"Notes","url":"//amit.visrolia.net/90dayleader.html","title":"The first 90 days of being a leader"},{"text":"What drives people to perform? Performance can be measured by engagement - being comitted to the job, and making positive contribution to the team. Maslow's hierarchy of needs : after physical needs, people need a sense of belonging, a sense of self-esteem and a sense of meaning. In general, there aren't many differences in motivators across cultures, However, there are across different generations, e.g. the desire for more leisure time. Hertzberg's two factor model : what factors drive satisfaction (motivating factors) and dissatisfaction (hygeine factors)? These are not opposites of each other: removing the dissatisfaction does not automatically lead to satisfaction. Both should be considered! Extrinsic and Intrinsic motivators : Extrinsic motivators - things that the organization provides - pay, recognition/titles/status, rewards etc. Intrinsic motivators - internal, e.g. autonomy, belonging, a sense of meaning. A poor focus on one without the other can actually be de-motivating. E.g. rewarding people (extrinsically) for an intrinsically motiviating task undermines the performance. âPay for performace' works less well than âpay for engagement'. Creating meaning at work: linking the work to the customer helps, i.e. seeing the beneficiaries of the work. Outsource motivation!","tags":"Notes","url":"//amit.visrolia.net/performance.html","title":"Understanding human needs and drivers of performance across culture"},{"text":"My references on leadership and people management Over the last couple of weeks, I've started watching some videos and reading some books on the topic of being a leader in the workplace. The plan is to develop a bit more into a new role I'm in, an extend my own skillset. Over the course of watching and reading these, I'll use this blog to make a few notes for my own reference. Videos The main resources I've been using are on Coursera . There is a specialization called Leading People and Teams , led by the University of Michigan. The course consists of: Inspiring and Motivating Individuals Managing Talent Influencing People Leading Teams Books The one book I'm reading came up a few times in the Hacker News thread linked below: Peopleware: Productive Projects and Teams Websites and links The original discussion that I used as a source of inspiration, as well as a couple of other links: Hacker News 90-day plan Things I wish I was told","tags":"Notes","url":"//amit.visrolia.net/leading.html","title":"Leading people and teams"},{"text":"The posts on this blog are written in Markdown. The full specs of Markdown are here , but the most useful commands are summarized here. Markdown is written in a plain text file. Headings Headings are denoted by a series of # characters for heading levels 1-6: # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Formatting Paragraphs are separated by blank lines. Line breaks are added by terminating lines with two spaces. Text formatting: *italic*, **bold**, `monospace`. Text formatting: italic , bold , monospace . The monospace formatting is also useful for escaping certain characters and strings, but also see the code block section below. The escape code for special characters is \\ . Horizontal rules are specified by three or more - characters on a line. --- Links There are two main kinds of link, I'll call them inline and referenced. This is an [inline](//www.example.com) link. And this is a [referenced] [ref] link. [ref]: //www.example.com This is an inline link. And this is a referenced link. Code A code block is indicated by starting the line with 4 spaces (a tab in most of the text editors I've set up). This will format the code in a monospace font, and ensure that everything in the block remains escaped (rather than parsed as Markdown). Pelican also has syntax highlighting support via Pygments. To invoke this, add :::<language> to the beginning of the code block, where <language> is replaced by whatever language you want to highlight for. Alternatively, use #!<language> to add line numbering. There's a demonstration of this on this page. Images Images are incorporated as a special kind of link, preceeded by the ! character. They too come in inline and referenced forms. Inline ! [ Alt text ]( / path / to / img . jpg ) ! [ Alt text ]( / path / to / img . jpg \"Optional title\" ) Referenced ! [ Alt text ][ id ] [ id ] : url / to / image \"Optional title attribute\" Anything else HTML can be incorporated directly into Markdown for anything that's not otherwise easily accomplished.","tags":"Notes","url":"//amit.visrolia.net/markdown.html","title":"Markdown"},{"text":"How to sync this blog to Github Now that some of the basic functionality of the blog is up and running, I have started to investigate hosting it. I've chosen Github, for the fact that it's simple and free. The way I do this is documented here. The local folder has been set up as a git repository. ghp-import is installed: pip install ghp-import Do the usual initialization and commit: git add . git commit -m \"<message>\" Then, use ghp-import to add files to the branch gh-pages, then push to Github: ghp-import output git push git@github.com:amitviz/amitviz.github.io.git gh-pages:master To be perfectly honest, this seems like a bit much effort. What I should do at some point is to add these commands to the makefile to automate as much as possible.","tags":"Notes","url":"//amit.visrolia.net/github-pages.html","title":"Github pages"},{"text":"The link between goals and performance What is the the link between the difficulty of a goal and performance ? Does an easy or tough goal lead to better performance? Performance is strongly correlated to acceptance of a goal. Why do people accept or reject goals? Goals direct effort - towards the desired task, and away from undesired tasks. Stretch goals (challenging goals) can and do drive performance. But, they can promote unethical behaviour! People can begin overstating their achievements, to make it appear that the goals are being met. Stretch goals can also promote dissatisfaction - we measure our performance against our aspirations . Falling short of a tough target hurts more than over-shooting a low target - even if the actual performance is higher in the first case. This can cause people to burn out! SMART goals A good framework for effective goals. Specific Measureable Agreed Reasonable Time bound The down side is that too much focus on a specific goal can make people lose sight of the vision and values, as well as miss the context of our work. They can promote tunnel vision . This is a problem when it limits creativity and learning. Goals should somehow have link to a meaning . This gives people a sense of purpose. The customer can give us a sense of meaning - seeing the product of our work is a motivator.","tags":"Notes","url":"//amit.visrolia.net/goals.html","title":"Setting effective goals and expectations"},{"text":"Theres a useful plugin for Pelican to render Latex equations, called render_math . Here are a couple of equations to test that it works okay. An equation can be placed in-line, by placing Latex code between a pair of $ characters. Pythagoras' theorem states that \\(a&#94;2 + b&#94;2 = c&#94;2\\) . Alternatively, a pair of $$ characters can be used to include a display equation. The well known formula to determine the roots of a quadratic equation is: $$x = \\frac{-b \\pm \\sqrt{b&#94;2 - 4ac}}{2a}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Notes","url":"//amit.visrolia.net/mathtest.html","title":"Maths test"},{"text":"Pygments is included in my installation of Pelican. Here are a couple of code fragments to test that syntax highlighting is working correctly. This is an example of a Python file, presented with line numbers: 1 2 3 4 5 6 7 8 9 10 11 12 13 import unittest def median ( pool ): copy = sorted ( pool ) size = len ( copy ) if size % 2 == 1 : return copy [( size - 1 ) / 2 ] else : return ( copy [ size / 2 - 1 ] + copy [ size / 2 ]) / 2 class TestMedian ( unittest . TestCase ): def testMedian ( self ): self . failUnlessEqual ( median ([ 2 , 9 , 9 , 7 , 9 , 2 , 4 , 5 , 8 ]), 7 ) if __name__ == '__main__' : unittest . main () And here a matlab function, this time without line numbers: function echo_number % % Ask the user for a number, and then echo it to the screen. % Quit when the number given is -1. % % Arguments: % none % % this is the value we'll use to terminate the loop quit_value = - 1 ; done_yet = 0 ; while ( done_yet == 0 ) user_value = input ( 'gimme a number ' ); fprintf ( 1 , 'you typed %f \\n' , user_value ); if ( user_value == quit_value ) done_yet = 1 ; end end","tags":"Notes","url":"//amit.visrolia.net/pythonexample.html","title":"pygments"},{"text":"A Virtual Environment is a tool to keep the dependencies required by different projects in separate places, by creating virtual Python environments for them. Installing virtualenv: pip install virtualenv Create a virtual environment to install into: virtualenv <name> Activate the virtual environment: source <path>/<name>/bin/activate","tags":"Notes","url":"//amit.visrolia.net/virtualenv.html","title":"virtualenv"},{"text":"Types of power and how to use them to influence people Power: the potential for influence. Types of power: reward power punishment power legitimate or organizational power charismatic power expertise power information power What is power? There are many definitions. Power is the potential ability to influence people. Power is control over resources and outcomes. Power is relative, and it depends on the context. Power can be actual or percepual . The benefits of power Power reduces conformity. Power reduces the feeling of burden. Power increases cardiac output! The dark side of power Power leads to overconfidence, and reduces advice taking. Power makes people more self-focussed, rather than other-focussed. A formal power imbalance in a team leads to less open communication within the team. The bases of power Personal bases: expertise, information, charisma Structural bases: legitimate, reward, punishment Cognitive: beliefs (culture)","tags":"Notes","url":"//amit.visrolia.net/ip.html","title":"Influencing people"},{"text":"The necessity to create and communicate a vision A vision: creates a sense of shared direction and meaning creates energy defines stretch goals that build confidence A vision is the message that is communicated every day â- through language and actions. It's not the same as a mission statement or slogan! The questions: Why do we do what we do? Why do we exist as a team? What does success look like? What do we create for our customers/stakeholders? How must we act to ensure success? What are our values? Visionary language Refer to fundamental values - not explicitly, but transfer the meaning by means of stories and experiences. Rhetorical questions - questions that provoke thought. Moral conviction - why do we do what we do? Name the customer to create a link for the team. Use inclusive language: \"we\", \"our\". Repeat the message! Non-verbal Vary intonation, volume and pitch when communicating! Smiling Open body posture","tags":"Notes","url":"//amit.visrolia.net/vision.html","title":"Becoming a Visionary Leader"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/shelton10k2015.html","title":"Shelton Striders 10k 2015"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/eclair.html","title":"Chocolate and coffee Ã©clairs"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/ardeche.html","title":"ArdÃ¨che and Verdon"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/montecarlo.html","title":"Monte Carlo, Monaco"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/marseille.html","title":"Marseille"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/whatstandwell.html","title":"Whatstandwell"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/cannock10k2015.html","title":"Cannock Chase 10k 2015"},{"text":"EMF - Edinburgh Marathon Festival 1:58:51","tags":"Pictures","url":"//amit.visrolia.net/emf2015.html","title":"Edinburgh Half Marathon 2015"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/bali.html","title":"Bali"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/vietnam.html","title":"Vietnam"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/bushypark.html","title":"Bushy Park"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/granada.html","title":"Granada"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/cordoba.html","title":"CÃ³rdoba"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/cadiz.html","title":"CÃ¡diz"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/sevilla.html","title":"Sevilla"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/dale.html","title":"Dale"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/amsterdam.html","title":"Amsterdam"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/pirahna.html","title":"Pirahna"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/machupicchu.html","title":"Machu Picchu"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/derby10k2014.html","title":"Derby 10k 2014"},{"text":"The Guardian","tags":"Links","url":"//amit.visrolia.net/bridges.html","title":"The world's scariest bridges"},{"text":"The Guardian","tags":"Links","url":"//amit.visrolia.net/highhikes.html","title":"Don't look down: a glimpse at the world's scariest hikes"},{"text":"58:54","tags":"Pictures","url":"//amit.visrolia.net/berlin10k.html","title":"Berlin Grand 10k"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/berlinlight.html","title":"Berlin Light Festival"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/oktoberfest.html","title":"Oktoberfest!"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/copenhagen.html","title":"Copenhagen"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/bratislava.html","title":"Bratislava"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/brno.html","title":"Brno"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/budapest.html","title":"Budapest"},{"text":"Sachertorte at CafÃ© Landtmann","tags":"Pictures","url":"//amit.visrolia.net/vienna.html","title":"Vienna"},{"text":"Bar and Books","tags":"Pictures","url":"//amit.visrolia.net/prague.html","title":"Prague"},{"text":"1 gs -q -dNOPAUSE -dBATCH -sDEVICE = pdfwrite -sOutputFile = $output -c .setpdfwrite -f $1","tags":"Notes","url":"//amit.visrolia.net/pdfsecurity.html","title":"Remove security from a PDF file"},{"text":"10k cut to 5k because of heat 28:59 @ 32Â°C","tags":"Pictures","url":"//amit.visrolia.net/berlin5k.html","title":"Berlin Night Run"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/sanssouci2.html","title":"Sanssouci"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/jewishmuseum.html","title":"JÃ¼disches Museum Berlin"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/reichstag2.html","title":"Reichstag"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/leipzig.html","title":"Leipzig"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/diewelt.html","title":"Die Welt"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/saxon.html","title":"SÃ¤chsische Schweiz"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/dresden.html","title":"Dresden"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/sanssouci.html","title":"Sanssouci"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/hamburg.html","title":"Hamburg"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/reichstag.html","title":"Reichstag"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/pergamon.html","title":"Pergamon Museum"},{"text":"On segments of the Berlin wall.","tags":"Pictures","url":"//amit.visrolia.net/dictators.html","title":"Dictators"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/oranienburger.html","title":"Synagoge Oranienburger StraÃe"},{"text":"Berlin Classic Days","tags":"Pictures","url":"//amit.visrolia.net/mercedes.html","title":"Mercedes-Benz"},{"text":"Fernsehturm Home for now!","tags":"Pictures","url":"//amit.visrolia.net/berlin.html","title":"Berlin"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/tulips.html","title":"Tulips"},{"text":"The Guardian","tags":"Links","url":"//amit.visrolia.net/veggiecooking.html","title":"How to get the best out of vegetarian cooking"},{"text":"","tags":"Pictures","url":"//amit.visrolia.net/wye.html","title":"Up a creek"},{"text":"First ever 10k: 1:00:17","tags":"Pictures","url":"//amit.visrolia.net/derby10k2013.html","title":"Derby 10k 2013"},{"text":"The Guardian","tags":"Links","url":"//amit.visrolia.net/zipwire.html","title":"Amazing zip wire rides around the world"},{"text":"1 adb backup [ -f <file> ] [ -apk | -noapk ] [ -shared | -noshared ] [ -all ] [ -system | nosystem ] [ <packages...> ] -f specify filename -apk|noapk include apks -all backup all apps (rather than specify individual packages) -shared|noshared backup shared storage partition (i.e. sdcard) -system include system packages specify package names to backup To backup and restore to a different ROM , usually: 1 abd backup -f ~/backup.ab -apk -all -noshared -nosystem To restore: 1 adb restore ~/backup.ab Convert to tar (only if backup was unencrypted): 1 dd if = backup.ab bs = 24 skip = 1 | openssl zlip -d > backup.tar","tags":"Notes","url":"//amit.visrolia.net/adb.html","title":"adb backup"},{"text":"16 Habits You Should Do Every Day I. Overview For a long time now I have been ruthlessly attacking the question of what it is I do with my days. I began a project where I tracked my daily endeavors to see what I was doing with my time (see part IV ). I have been keeping this up every day for the lesser part of a year now and I discovered that a large portion of my time was, regrettably, wasted away. I also evolved a system of growth that I want to share with you today. Your daily habits are HIGHLY correlated with success or failure. By doing something everyday you can achieve goals that would be otherwise impossible. By doing something every day you can make yourself process oriented. By doing something every day you can give yourself the abundance mindset. I can't talk this up enough. For the last year I have been scrutinizing my days and how I appropriate my time. This post proposes 16 things that anybody can do to begin changing themselves and their life. I've gone through quite an evolution and am sharing the results of my experiment with you here. It's a long post, but I encourage you to read through it â you will likely find some value in it. II . Paradigms \"We are what we repeatedly do. Excellence, then, is not an act, but a habit.\" -Aristotle Before I get into the specifics of the rituals I've integrated into my life I think it's important to understand the paradigms I'm operating under. The epiphanies and understandings I've come to have allowed me to implement these habits and take massive action. If you're starting from scratch, I'd guess it would take about six months to a year to develop the self discipline required to sustain the regiment of habits I'm discussing. The first paradigm and concept you need to understand is the lifetime approach. Habits â A lifetime approach When considering doing something every day for forever you obviously consider what effect it would have on you. Both in the long term and the short term. You will look at what it is you want to do every day, such as exercise and consider the short and long term effects. In the short term what gives? Well it makes you feel pretty good for one. A runners high, a sense of pride and accomplishment, and also the rollover it has to other parts of your day. It's not like you exercise and then hit mcdicks and your couch. Generally this converts to momentum that you carry to other tasks. The benefits of exercising on any given day are obvious and realized immediately. Consider also the long term effects. As you maintain a regiment of exercise your body fat percentage drops, your flexibility and strength increase (less chance of injury) your lifespan extends, your immune system is bolstered, you maintain your youth longer, you carry over a sustained vigor to other parts of your life, your resting heart rate goes down, and you have a general feeling of well being. Pretty sweet. Clearly exercising is very important; given both its short and long term benefits. This is the algorithm I've used for proactively constructing my life. Take the activity, consider the long and short term effects and evaluate if that's what I want in my life. Many activities I regularly engaged in had wonderful short term effects but terrible long term effects on my health, well being and prosperity. Follow me through a short aside and lets apply this algorithm to a different and arguably negative activity; drinking alcohol. Short term effects can be great (state, fun, makes game easier) but with a little more inspection you realize the rollover effects it has. Health-wise this is obvious. Drinking is bad for you, especially binge drinking. But its easy to overlook what else is going onâ¦ its not just alcohol it's the partying. The shitty sleeps when you drink, the wrecked immune system, the shitty food you eat drunk, my increased likelihood of smoking cigarettes and doing drugs, and the long term damage of alcohol (by the time im 26 years old that will have been a DECADE of binge drinking) Financially its obviously detrimental â drinks at the bar can crucify a student budget. Your productivity also takes a huge hit when you drink; the next day is a write off. Even if you have a lot of will power and momentum taking charge of your life, go at it a couple of days in a row and you set yourself way back. There are books to be read, weights to be lifted, laundry to be doneâ¦ but noâ¦ hungover = DURR state. By taking a step back and looking at the ecosystem of consequences your choices have you can better decide what things you do and don't want in your life. Mastery â The \"S\" Curve The next concept is derived from George Leonard's book Mastery.The idea is that progress with regards to anything skill related is not a linear equation, ie the effort you put in does not directly correlate with what you get out. The reality is that you spend most of your time on plateaus, putting in effort and not getting anywhere, until eventually you break through emerging better than before. I agree but would like to extend his model to include the exponential S-curve. The diagram below is fairly autobiographical. ï¿¼ In my limited time on earth I have found this to be true. Lifting weights, learning calculus, playing piano, meditation, carpentry, programming, writing, painting, gardening, using chopsticks, chess and checkers; They all follow this formula. Everything you do will have a discouraging period of slogging through with little to no progress (I refer to this as âsucking shit') It's important to understand this because it can help prevent you from getting discouraged. Knowing that when you break through a plateau it will be with a bang and it will be glorious. This is how it's going to go. You make the decision that you're going to walk the path. You're going to learn how to program or play the piano. Now you begin putting in a force, a consistent sustained effort. You will do this every day. Now you can begin the process of advancing along the mastery curve. If you put in no effort you make no forward movement â obviously (*In my experience when you give up on a skill you don't lose it entirely you just kind of accumulate rust.) Exponential Growth and Spillover Two things happen as you move along the mastery curve, and understanding these can help motivate you. For one, you will eventually gain exponential progress. Learning is exponential. You start to see compounding returns as you put the pieces together. You pick up a momentum. Your results are fuel for your motivation and it puts you into this self fulfilling cycle where you gain results, which give you motivation, which gets you to push harder until you get more results. This doesn't really happen if you suck thoughâ¦ How do you hit that exponential growth â the cycle of improvement? You'll do it through sheer FORCE OF MOTHERFUCKING WILLPOWER . That's what it takes to break through. The second thing that will happen is you begin to accumulate âspillover' effects. For example, as you play more chess your critical thinking develops or maybe as you go out more your social skills sharpen and your performance at work improves. As you begin to cultivate willpower and self discipline in your life the probability that you will succeed when you pick up a new skill is much, much higher. Meta-meta-cognition Cognition is your ability to read something and understand it. Meta cognition is your ability to evaluate your comprehension as you read it. Meta meta cognition is thinking about the process of evaluating your comprehension. Every level is a higher order of thinking. Basic cognition is purely operational â it may get you through life from paycheck to paycheck. Taking a step back and thinking about how you're living your life is meta cognition, this can help you manage your life as you introduce an element of proactivity into it. Meta-meta cognition is taking one further step back and assessing the very values that you decide to live your life by â if any of that makes sense. Meta cognition will help you manage your life, finances, relationships, business, and learning. Meta meta cognition is thinking about your values, purpose, and direction in life. They say that meta cognition is associated with intelligence, then meta meta cognition is associated with brilliance. It is a very powerful tool. (expanded on in habit 16) III . The 16 Daily Rituals Exercise â Exercise is essential; I briefly touched on what happens to you in the short term but consider also the long term effects of regular exercise. As you maintain a regiment of exercise your body fat percentage drops, your flexibility and strength increase (less chance of injury) your lifespan extends, your immune system is bolstered, you maintain your youth longer, you carry over a sustained vigor to other parts of your life, your resting heart rate goes down, and you have a general feeling of well being. Pretty sweet. Clearly exercising is very important; given both its short and long term benefits. But do you have to do this every day? That seems strenuous. Try expanding your definition â You don't give it your 100% every day. Some days may be 10 minutes of simple light stretching, just to keep the habit. Other days may be 2.5 hour monster gym sessions. I use this habit to help me accomplish two other things very important to me, meditation and getting into nature. Often times my physical exertion is a one hour walk through the park or along the water front. Practicing a walking meditation is a great way to center yourself and help carry the skill over to everyday life. Being in nature has a similar balancing effect on your well being. But you don't need me to tell you to work out. The benefits are all clearly documented by scientists and people. There are networks and resources for support and endless sources of inspiration to motivate you. Meditation â This habit is invaluable. You need to meditate. Think about what part of the human experience spirituality addresses â the ego and fear â two concepts that would benefit you SO much to control. I think a lot of people get messed up here because the benefits are very intangible at first. The \"S curve\" of Mastery that I described above has a very looong period of âsucking shit'. If you're not experienced then your image of what meditation should be like is wrong. Fighting your expectations will be a constant battle as you learn to meditate. Here are some resources to help you learn. [Reddit Article] [http://code.reddit.com/wiki/help/faqs/meditation] â Very concise introduction to meditation [Mindfulness in Plain English] [http://www.urbandharma.org/udharma4/mpe.html] â Amazing book that covers the topic clearly and in depth [Meditation Retreat] [http://www.dhamma.org/] â 10 day intensive mediation retreat [Binaural Beats] [http://www.youtube.com/user/FulLengthBinaurals] â Beats that can help induce a meditative state (great training wheels, also make sure you are using good quality headphones) [Self Transformation Through Meditation] [http://www.kratosguide.com/self-transformation-through-meditation/] â Another article on this site you can check out Practice â Start meditating everyday. The evidence is in by a landslide, both anecdotally and empirically. Meditation will change your life so start today, any reason you may have for not trying is an excuse. Once you get the hang of it you will leave your meditation sessions feeling centered, calm, and relaxed. It has an ego-lessening effect and awareness increasing effect that spills over to your everyday life. If you keep up the practice you'll notice that your focus and attention span increases dramatically, as does your sight and sound sensitivity (think of the most visceral things you do â sex, eating, sports etc.) Brain regions associated with attention, interoception and sensory processing will literally become thicker. In the long term, meditation offers a âprofound transformation of how you experience reality' It will bring you joy, peace, and happiness. This is real and you need to be doing it. Reading â If you read the right books you will be moved, inspired, and motivated. Think about what you expose yourself to. There's a million shitty blogs on the internet written by whoever. But then there's books out there that will change your life. Books that the most gifted human beings on earth have spent years writing. A lifetime of experiences, insights, and lessons learned given to you in a nice handheld easily digestible form. I started this habit at a half hour a day. Recently I've started reading about an hour a day and am burning through books. With a constant flow of information in, you increase your ability for information to flow out (applying knowledge to your life) Reading is an easy habit to put off and you need to make it a priority. If you're not regularly reading then you may start to fall asleep as you pick up a book. Your mind is not conditioned properly and you need to force yourself through that period. Your reading speed and comprehension do pick up over time â just stick to it. If you have no idea where to begin, the recommended reading section is a good place to start. Creative Recreation â People are going to approach this one very differently but if there is something you can sit down and do purely for your enjoyment than that's awesome. Think of a flow state activity that you can put your full expression into. For me it's playing an instrument. If you've ever seen someone play the guitar or piano at an extremely high level in a non performance setting then you'll know what I'm talking about. The \"S\" curve of learning an instrument is very, very, very long. But you get out what you put in. Your amusements will leave you feeling rejuvenated and can often break up and lighten the day. As you invest in your hobbies you will get more and more out of them I generalized this habit as âcreative recreation' because I want to emphasize the fact that recreation is not a spectator sport. Vegetating on the couch watching commercials is not recreation. Nutrition â As you build a productive life your ability to stay focused and have energy becomes very important. What you eat has a big effect on how you feel. If you eat right you can avoid energy crashes, fight off sickness, and generally just feel âgood'. I know that I'm definitely not the best person to give nutrition advice but the resources are out there. It should be obvious that what you put in your body is very important. Do yourself a favor and learn how your body works. For me, I don't eat sugar or processed food. I drink 1.5L of water a day and I make an extra effort to eat more plant based foods. I supplement my diet with fish oil etc. I think what's most important though is that you proactively decide what you put in your body. Make the time to cook your meals, keep your fridge stocked, and don't buy convenience food. Reasonable Spending â Like nutrition, this habit is more of a choice you make rather than an active investment of your time. Its pretty straight forward, every day I try to manage my money reasonably. Apply the concept of reactivity/proactively to your spending and you have an excellent framework for managing your money. Did you plan on making this purchase? If not then don't do it. The nature of planning a purchase is that it is in line with your goals and budget. The nature of making an impulsive/reactive purchase is quite the opposite, âit is right here and will satisfy me right now' (mostly consumer/convenience items) Brain Buster + Current Events â Part of my morning routine is to check out the economist, my local news site, or the new york times and read two or three articles. Given my background and where I want to go in life it is going to serve me well to be informed and have the ability to notice trends and understand the complexity of global issues. I also work very hard to develop my critical and lateral thinking. Every day I challenge myself to solve one extremely difficult problem. Actually I only figure them out about 30% of the time. On my computer I have a repository of IQ , Mensa, brain buster type books that would take a lifetime to work through. Some problems I solve in five minutes others take me thirty until I break down and look at the solution. If you run a business or are any kind of decision making authority (or eventually want to be in that position) then I can't vouch enough for this habit. You need to be sharp and informed. Period. Social â Every day I make an effort to advance my social skills. Your ability to communicate effectively with human beings has so many implications in your personal and professional life. I've gone through experiments with this habit and I think the less your around people the more you need to make it a priority (my lifestyle right now has me around new people ALL the time, but there have been other times in my life when I actively had to make that happen) I've tried a few different things. For a while I really focused on listening to people with the intent to understand, pushing the urge to get my point across aside and giving other people the floor when they were expressing themselves. I've done different experiments with eye contact and physicality while communicating as well. Regardless, going out and just talking to people trumps all when it comes to developing your social skills. Personal Management â This is the easiest of all habits to implement. Just 10 minutes a day and your bachelor pad is looking clean and fresh. Not many long term benefits here except maybe you don't lose your possessions as often and they have and increased lifespan. In the short term doing your laundry, not letting your dishes pile up, and making your bed can offer you a peace of mind and allow you to work unfettered on other projects. Project 1, 2 or more times a week â For me I set aside a two hour block twice a week to work on a personal project. This could be fleshing out a business feasibility plan, recreating my weightlifting routine, catching up on some reading, creating a budget, doing research, or writing this mega post. At the beginning of each week I choose what two projects I plan to work on and within the week I find time to fit them in. Use this habit as a way of revitalizing old projects that are collecting dust or to begin something new that you've been thinking about but haven't got around to. The effects this habit has on your short and long term productivity are enormous. Podcast/ TED Talk/University Lecture â If you're a thinking human being with a desire for knowledge then you should be listening to podcasts, watching ted talks and viewing the thousands of lectures professors and researchers have on the internet. This is a habit I integrated for both its short term and long term benefits. In the short term I find it interesting to learn about new topics. A lot of times it's on a subject I'm interested in at the time, other times its something completely new. Either way I'm exposing myself to the best and brightest minds of today and expanding my understanding of the world. If you engaged yourself with this material every day, what would the long term effects be? Besides a vast and varied wealth of knowledge you would begin to draw disciplines together. Your understanding and awareness would grow so large that the value and wisdom you could offer other people would be incredible. *For a practical tip, throw a queue of talks you're interested in on your iPod and listen while exercising. Language â Every day I spend thirty minutes learning a new language. This is an ongoing task that I struggled to integrate. You realize almost no immediate benefit and that makes it exceptionally difficult to do every day. The \"S\" curve of mastery is very, very long (years). But alas, the benefits in the long term must be exceptionally rewarding. I can only speculate as I currently only speak one language, but from my time studying in Italy I can tell you I would have got a lot more out of the experience had I spoke the language. Coming from a business perspective being bi/multi-lingual would likely be a huge advantage. For me, I intend to spend a large part of my life travelling. If you expect to live another 50/60 years of life on this earth then imagine the lifetime of opportunities and experiences other languages may open you up to. Don't cut yourself off. For some practical advice getting started I recommend the Rosetta stone. It's a visual program that is a great way for getting you started. Listen to talk radio (via internet) and get a language book with exercises to help you practice. Get a woman your seeing to join in. It accelerates the process so much if you have someone to practice speaking with. We are the first generation with ready access to the internet. The resources to help you pick up a language are out there and they are free â use them. Plan the next day â This is so crucial. Note that there is a small learning curve to this as you figure out a system that works for you. Maybe you like to manage your timetable through your phone, or maybe you just pencil out what you do on a list. Whatever the method it must satisfy two requirements: 1) The document must be easily accessible to you throughout the day, and 2) it must specify approximate times when you will complete each task. It's pretty simple. When you have some time to think with a clear mind you plan out what you want your next day to look like you do it. The time you know you have to yourself (mornings usually) you can set a more ridged structure than the times where there are many variables as to what you may be doing. The plan is your servant, not your master. Never get upset if things don't go the way you thought â it's just a guideline to keep you on track. Lost time, interferences, failing to execute out of laziness or apathy, unforeseen events, all of this will happen. Don't be worried, the element of proactivity you introduce into your life by planning your days out already places you way ahead. Another thing to keep in mind is that your primary goal is not to be efficient. It is to be effective. Don't be so worried about having some intense schedule that will burn you out quickly. Allow a good amount of time for transitions and even more for other forms of time you will use organically. If you have in your head a picture of someone ruthlessly triaging priorities, feverishly executing tasks and running around from one item to the next then you should rethink your understanding. As you go through your day you will apply yourself to each activity wholly and with everything you've got. You will take things slow and execute with passion, care and effort not with haste or carelessness. Sleep â You're either plugged into the matrix or you're not. If you're plugged in you're a spectator â you watch TV , you kill time on Facebook, you days slip by as you wander through in lower consciousness. If your unplugged you're a player â You are taking consistent and massive action, you are constantly ingesting new information, you are pushing your boundaries and limitations, you are growing. So naturally if you're living your life fully engaged you need a good night's sleep. The amount of stress you experience by pushing yourself, the information your internalizing, and the focus and stamina you need to keep going can all be facilitated by a good nine hours on the pillow. Take this shit seriously â you will notice a difference. If you've ever studied sleep you know that your body goes through approximate 90 minute cycles (from deep sleep to REM sleep), you know the amount of light you are receiving effects your bodies melatonin production, you know that what you eat before bed can affect your sleep, and you also know that sound can disrupt your sleep. You know that sleep plays an integral role in learning and memory. You are also aware that the human body associates certain surroundings or conditions with sleep (think when you walk into a bathroom you feel like you have to pee. The same thing when you are in your bed â you get sleepy. Therefore only use your bed for sleep and sex). I sleep in total darkness, in a cool room, with a fan for white noise (drown out traffic and creaks in house that would otherwise wake me up). I have comfortable mattress and I wake up to an alarm clock that gets brighter instead of making noise.(simulates the sun rising) I don't set my alarm for the same time every morning, I set my alarm either 7.5 or 9 hours from when I fall asleep (so I don't wake up in the depth of a sleep cycle â you may have to tinker with the times but you will learn your body). Try some of this and you will be amazed with the effects on your energy levels, retention of information, and how you enter your days in the morning. Professional Development â You're either working in the industry you want to be in or you're not. Either way you should spend some of your day developing the skills necessary to succeed in the industry you want to be in. If you're stuck in a job you don't like then this daily ritual is the key to breaking through. You will develop yourself in the area of your interest until you have the credentials, credibility, or opportunity to move permanently. Maybe you're stuck working as a bank teller, but you want to get into internet marketing. You should begin to spend a part of your day learning the skills you are going to need to be an internet marketer. Think of it this way, most people are reactive. Most people land a job through connections or convenience and after they have that job they then learn the skills necessary to succeed. You are not that person. You will do the reverse. You will gain the skills through your own force of will and then land âthe job'. This is the formula to carve a life of your design and live your dreams. If you're already in the industry of your dreams then you should never stagnate. Constantly focus on learning new material, keeping up with trends, observing competitors, or expanding your professional reputation. Focusing on this will allow you to offer more value in whatever you do and will facilitate success. Journal + Research â Keep a journal and update it every day. What is a journal? A journal is a place where you write out your thoughts and then look back at them and ponder. You then write about what you thought of your thoughts and think about that. (Meta-meta cognition) Do you see how this can be a valuable tool for personal insight and growth? This isn't a high school dairy. It's a tool you use to track your thoughts, expand on insights, accelerate your growth, and look back on your progress. Shits happening? Write about it. The very act of consciously creating syntax to your thoughts can help you become more rational and can facilitate problem solving in your life. There is a second part to your journal writing ritual that you need to engage in. Research. As you make discoveries and insights you should seek out truth and guidance. We have the internet and it is an amazing tool for feedback. Our parent's generation had to live with misinformation their whole lives. Our generation enjoys the luxury to â with incredible ease â access the forefront of human knowledge in the snap of a finger. Use this luxury to fuel your growth. IV . Implementation \"We first make our habits, and then our habits make us.\" - John Dryden I am suggesting that you implement all 16 of the rituals listed above into your daily routine. I know this is hard â I've walked the path and failed many times. I learned that this is very hard to do. It takes discipline, skill, and proactivity, BUT if you can do it the rewards are great. The capacity for you to out perform others is massive. In the next section I explain how I used technology to help track my progress. Now I'm not suggesting you do this as intensely or for as long as I did but you can always experiment. We spend an amazing amount of on screen time, and I figured since I was on my laptop everyday I would track my progress with a very simple binary system. I started small, 7 things I wanted to do every day. I opened up excel and made a spreadsheet with the dates on the x axis and my habits on the y axis. Fairly self explanatory, if I completed the task I would color it green, if I failed I would color it red. ï¿¼ I've kept this up now for the lesser part of a year and it has grown and evolved. I was always extremely honest with myself and I found the objective measure of progress to be very blunt. Your success or failure is right there, staring you in the face. No ego can manipulate the facts, only your interpretation. Part of the reason this helped me was that I could recommit. I would continually recommit to something until I gathered enough first hand experience that the activity was something I should value. Your ability to stick with something for the long term is a function of intrinsic motivation (process orientation), not extrinsic (outcome orientation). If you're motivated by validation or external forces you will likely fail in the long run. This is what my spreadsheet looks like now. All 16 habits I discussed are incorporated into my daily life. Keep in mind that I am in school full time, have a girlfriend, play on pokerstars every day (for ~20$/hour), am preparing for my GMAT 's, and live an extremely social life â you can fit it all in, even if you work a 40 hour week. If you don't think you can do it then you have limiting beliefs. There's a lot of fat to be trimmed out of your daily routine, you just need to look. Again, I'm not suggesting that you go full nerd like I did and track your progress every single day. But if you did do that you would definitely learn some very interesting things about yourself and how you operate. I'm going to share some of my discoveries with you here and hopefully they can help you on your journey. Falling Apart â Four types No matter how hard you try, or how much effort you put in, you will â at times â fall apart. I would say there's four ways this happens: Getting sick, apathy, âshort term mating strategy' and consuming commitments. If you don't have a lot of self discipline then the most common way you will fall apart is apathy. You need to understand that apathy is death. Apathy IS death. It will kill your growth and suck you into laziness. It happens as you slip into lower consciousness. Correlating displays in your behavior emerge: depression, apathy, negative and low self esteem thought patterns, etc. There are so many things that can throw you off track and sink you into apathy: Loss of progress, negative feedback, feeling âblue', video games, addictions, poor diet, lack of sleep, fear, financial/family/social stressors. This is where taking responsibility is key. This knowledge helped me fight myself when my brain would come up with rationalizations and excuses for why I copped out on my duties. The rationalizations were pretty good sometimes (I didn't have enough time, I wasn't physically able, I was sick, it would be counter productive etc (your brain is very clever)) but the facts were in. I couldn't gloss over the correlation between my daily choices and how they affected my productivity. Eat shitty food, get poor sleep, and you will be less productive. When you fall into the gutters of apathy the only way out is to pull yourself up by your bootstraps. If you have ever taken the time to write out your values then they can be a key extremely helpful in this situation. Read them over, ponder them and commit yourself to them. The quicker you can recommit yourself to your values and get back on track, the better. You will go through this process many, many, many times The second way you completely fall of track is when you get sick. The average adult catches two to four colds a year. That's two to four weeks of setbacks, suffering, and disruption. Not much you can do about it other than prevention (and as it turns out prevention is pretty effective! You don't ever have to get sickâ¦ [drink water, avoid binge drinking, get all your vitamins and minerals, sleep, oral hygiene, washing your hands, and regular relaxation. This is only anecdotal evidence but I found that when I got sick, poor sleeps for many consecutive days was always a factor]) The third type of falling apart is what I will call your âshort term mating strategy'. To be honest with you, I don't think this is that bad. I look back at my excel chart of times where I was in this mode, nothing would be getting done. I would be drinking and smoking and doing drugs. Say a five day bender where I would be having the time of my life. Retrospectively I wouldn't change a thing though because in those moments I was having SO MUCH FUN . I met so many people and developed so many relationships. When you're in this mode you are just âon'. Its so amazing to me that your brain has these two levels it can operate on. From my experience, the more resources you have (money, leisure time, lack of responsibility) the more intense the effects of the âshort term mating strategy' mode can be. Think, if you have a job or no more money etc. external forces like that can FORCE you to get your shit together. But when you're in the mode you're sure fucking good at rationalizing away your money, time, and responsibilities. So I think the key is to take an element of proactively into this. Acknowledge that this is going to happen to you and that it's OK . You know you'll get your shit together eventually. Just be smart about your life and don't cop out on any major responsibilities. The fourth way I would consistently fall off track with my habits is when I had a consuming commitment to honor. Maybe this was a family obligation or a travel day, or a big exam I had to prep for. Whatever it is you just do what you need to do and get back on track as soon as you can. When these kinds of things come up though I notice it's a lot easier to bounce back as opposed to sinking into some apathetic hurr durr state â that's the worst. Rebounding â Two Phenomena In my explorations I noticed two phenomena. The first is that you can't just focus on one area of your life. If you start seriously working on one discipline everything follows. You start fixing yourself in ALL areas of your life. The second phenomenon that I noticed when falling off the path is that you will come back stronger than ever before. I am not sure if this is because you have lessons learned from falling off or because your definition of what being on the path has now been expanded. Either way the process of growth is obvious, you fall and you get back up stronger than before. Keep in mind that falling off the path is an inevitability and will happen (a lot). Its how quickly you notice (awareness and higher consciousness) and recommit (take right action) that will determine your growth rate. Streaking Looking back over my performance I noticed that my habits would streak. There's an element of general momentum (Exercising in a day may give you momentum to complete other tasks) and then there is an element of discipline specific momentum (If you meditated yesterday it is more likely that you will today) On the flip side there's negative momentum. If you don't do something today then it will be harder tomorrow and even harder the next day. The result is that disciplines streak. You have runs where you'll stick with it every day, but then you will have runs, sometimes for weeks, where it just never seems to fit in your schedule. For this reason extra effort has to be made to revitalize individual habits that are falling apart. The Anxiety Response The anxiety response is so key to your growth. I left this section last for a reasonâ¦ this is such a POWERFUL concept. Your body comes equipped with the tools for your growth and that anxious feeling you get IS THE TOOL . When you realize you don't know what you need to know there is an uncomfortable anxiety. Your poor ego is exposed and your feel good belief systems are shaken. Do not run from this feeling of anxiety. It is SO human nature to suppress the feelings and rationalize them away. You look at your bank balance and you realize you barely have enough money for next months rent; an uncomfortable anxiety comes over you. Maybe you got caught lying and an uncomfortable anxiety comes over you. Maybe you see a woman you want to talk to and an uncomfortable anxiety comes over you. Your emotions are your feedback system. Do not let your ego get the best of you. Your ego will rationalize your life away, giving you all the reasons to be O.K. with your mediocrity and failure. When you feel that uncomfortable anxiety you need to ruthlessly seek out the cause and address it. Take full responsibility for what has happened to you. Maybe you realized you have been financially irresponsible. The ego response would be to justify your situation, \"I needed to get that stuff, I had to make those purchases\" This is unacceptable thinking if you want to grow. Consciously ponder the anxiety and take responsibility for your situation, \"Wow I was managing my money extremely poorly this last month. I need to figure my shit out, etc etc\" By diving into that anxious response, figuring out what's going on and taking FULL responsibility for whatever is happening, you will facilitate your ability to CHANGE and GROW in the future. Do not sabotage your growth and buy into your ego. The key to your growth is your emotional system, and you would do well to get in touch with it (hint- meditation)","tags":"Notes","url":"//amit.visrolia.net/16habits.html","title":"16 Habits You Should Do Every Day"},{"text":"As Easy As Riding A Bike","tags":"Links","url":"//amit.visrolia.net/ridingabike.html","title":"The terrible journalist's guide to writing an article about bicycles"},{"text":"PLOS One","tags":"Links","url":"//amit.visrolia.net/glassshape.html","title":"Glass Shape Influences Consumption Rate for Alcoholic Beverages"},{"text":"Kalzumeus : Make More Money, Be More Valued","tags":"Links","url":"//amit.visrolia.net/salary.html","title":"Salary negotiation"},{"text":"OfflineIMAP 1 sudo zypper in offlineimap Create ~/.offlineimaprc: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 [general] accounts = ACCOUNT_NAME1,ACCOUNT_NAME2 maxsyncaccounts = 2 socktimeout = 60 [Account ACCOUNT_NAME1] localrepository = local-ACCOUNT_NAME1 remoterepository = remote-ACCOUNT_NAME1 [Account ACCOUNT_NAME2] localrepository = local-ACCOUNT_NAME2 remoterepository = remote-ACCOUNT_NAME2 [Repository local-ACCOUNT_NAME1] type = Maildir localfolders = YOUR_ARCHIVE_PATH1 [Repository remote-ACCOUNT_NAME1] type = IMAP remotehost = imap.gmail.com remoteuser = YOUR_USER_NAME1 remotepass = YOUR_PASSWORD1 ssl = yes maxconnections = 1 realdelete = no [Repository local-ACCOUNT_NAME2] type = Maildir localfolders = YOUR_ARCHIVE_PATH2 [Repository remote-ACCOUNT_NAME2] type = IMAP remotehost = imap.gmail.com remoteuser = YOUR_USER_NAME2 remotepass = YOUR_PASSWORD2 ssl = yes maxconnections = 1 realdelete = no Setup a cron job to run periodically: 1 offlineimap -u Noninteractive.Quiet","tags":"Notes","url":"//amit.visrolia.net/imapbackup.html","title":"Offline email back-up using OfflineIMAP"},{"text":"create local repo: git init add files to version tracking (âstage'): git add . commit files to repo: git commit -m \"Comment\" automatically commit modified files: git commit -a (does NOT add new files) add changed files (inc. deleted files): git add -A . list branches: git branch (default is master) create new branch: git branch <branchname> switch to branch: git checkout <branchname> push to remote repo: git push git://*.git define a remote repo: git remote add <reponame> git://*.git (default repo name is origin) push to remote repo: git push <reponame> push to a specific branch: git push <reponame> <branchname> alt: git push <reponame> <localbranchname>:<remotebranchname> list remote repos: git remote clone repo: git clone git://*.git create local branch clone of remote branch: git checkout -b <branchname> origin/<remotebranchname> list all branches (inc remote): git branch -a get the latest updates from the remote repo: git pull <reponame>","tags":"Notes","url":"//amit.visrolia.net/gitbasics.html","title":"Git basics"},{"text":"Completing the beam FE program In the previous lectures, we developed a basic truss finite element program. In this lecture, we'll extend that program, first by adding in aligned boundary conditions, and then by adding more advanced element types (frame and beam elements). We'll also look at plotting in Matlab and see how to use these tools to produce a graphuc postprocessor. By the end of this lecture, the students should be able to: Apply aligned boundary conditions to the solver Calculate shape functions to be used for âframe' elements Create plots in Matlab, including a plot of a truss finite element mesh and its results This is the last of this series of lectures, so I hope that by the end, the students will have an appreciation of the process of creating a Matlab program. Aligned boundary conditions in the solver The code developed for the solver in the previous lecture applied boundary conditions only in the global coordinate system ( \\(u=0\\) or \\(v=0\\) ). To make the code a bit more general, we should handle aligned supports ( \\(u'=0\\) or \\(v'=0\\) ). Solution vector Instead of solving for the a solution vector of the form: \\begin{align} \\mathbf{u} &= \\begin{Bmatrix} u_1\\\\v_1\\\\u_2\\\\v_2\\\\u_3\\\\v_3 \\end{Bmatrix} \\end{align} we can look first for a solution of the form: \\begin{align} \\mathbf{u&#94;\\ast} &= \\begin{Bmatrix} u_1\\\\v_1\\\\u_2\\\\v_2\\\\u'_3\\\\v'_3 \\end{Bmatrix} \\end{align} where \\(\\mathbf{u&#94;\\ast} = \\mathbf{T}\\mathbf{u}\\) , and \\begin{align} \\mathbf{T} &= \\begin{bmatrix} I & 0 & 0 \\\\ 0 & I & 0 \\\\ 0 & 0 & t_3 \\end{bmatrix} \\end{align} and \\(t_3\\) is the transformation matrix for the orientation of the third node. We already have a function that calculates the transformation matrix. Implementing the boundary conditions The information required for aligned boundary conditions is: the node the orientation the restrained degrees of freedom Instead of listing all the nodes as we have done previously for globally oriented boundary conditions, we can list just the required information: aligned_boundary_conditions = [ element , local_node_number , x ' , y ' ; . . . ]; e.g. to constrain node 2 of element 3 to only move in the \\(x'\\) direction: aligned_boundary_conditions = [ 3 , 2 , 0 , 1 ]; Writing the MATLAB code Writing the MATLAB code should be easy: we've already covered the loops and logic, and some of the functions (e.g. the transform matrix) already exist. Some other elements that need to change are: \\(\\mathbf{F&#94;\\ast} = \\mathbf{T}\\mathbf{F}\\) \\(\\mathbf{K&#94;\\ast} = \\mathbf{T}\\mathbf{K}\\mathbf{T}&#94;T\\) Remember, we're now solving the system: \\begin{align} \\mathbf{K&#94;\\ast}\\mathbf{u&#94;\\ast} &= \\mathbf{F&#94;\\ast} \\end{align} for the unknown vector \\(\\mathbf{u&#94;\\ast}\\) : to get the global displacements ( \\(\\mathbf{u}\\) ) back, we need to calculate: \\begin{align} \\mathbf{u} &= \\mathbf{T}&#94;T\\mathbf{u&#94;\\ast} \\end{align} (recall that \\(\\mathbf{T}&#94;{-1} = \\mathbf{T}&#94;T\\) ) â Frame' elements and shape functions A frame element can sustain a bending moment or a transverse load. (Unlike the truss element.) Each node on the frame element has 3 degrees of freedom: displacement in \\(x\\) -direction ( \\(u\\) ) displacement in \\(y\\) -direction ( \\(v\\) ) rotation ( \\(\\phi\\) ) Frame element stiffness matrix The terms in the stiffness matrix can still be calculated directly. The stiffness matrix for a 2-node frame element, with a solution vector of the form \\(\\mathbf{u}'_e = [u'_1, v'_1, \\phi_1, u'_2, v'_2, \\phi_2]&#94;T\\) is: \\begin{align} \\mathbf{K}'_{e} = \\begin{bmatrix} k_{r} & 0 & 0 & -k_{r} & 0 & 0 \\\\ 0 & 12k_{b} & 6Lk_{b} & 0 & -12k_{b} & 6Lk_{b} \\\\ 0 & 6k_{b} & 4L&#94;{2}k_{b} & 0 & -6k_{b} & 2L&#94;{2}k_{b} \\\\ -k_{r} & 0 & 0 & k_{r} & 0 & 0 \\\\ 0 & -12k_{b} & -6Lk_{b} & 0 & 12k_{b} & -6Lk_{b} \\\\ 0 & 6k_{b} & 2L&#94;{2}k_{b} & 0 & -6k_{b} & 4L&#94;{2}k_{b} \\end{bmatrix} \\end{align} where \\begin{align} k_{r} &= \\frac{AE}{L} & k_{b} &= \\frac{EI}{L&#94;3} \\end{align} Solution of frame element system The global stiffness matrix is formed in the same way it was for the truss element: only now, each node has 3 degrees-of-freedom. The element local displacement and element global force vectors take the form: \\begin{align} \\mathbf{u}'_e &= \\begin{Bmatrix}u'_1 \\\\ v'_1 \\\\ \\phi_1 \\\\ u'_2 \\\\ v'_2 \\\\ \\phi_2\\end{Bmatrix} & \\mathbf{F}_e &= \\begin{Bmatrix}F_x \\\\ F_y \\\\ M \\\\ F_x \\\\ F_y \\\\ M\\end{Bmatrix} \\end{align} The transformation matrix \\(\\mathbf{T}\\) needs to be modified to account for this extra degree of freedom. A rotational transform to the global coordinate system does not affect the nodal rotations or applied moments (i.e. \\(\\phi = \\phi'\\) , \\(M = M'\\) ), so we can just insert the identity (i.e. \\(1\\) ) in the relevant degrees-of-freedom. Postprocessing frame elements The truss element exhibits uniform strain, i.e. the strain does not vary with \\(x'\\) . The frame element is capable of varying the strain along its length. Additionally, the element defines displacement (and hence strains) in the \\(y'\\) direction. To determine displacement (and other derived quantities) at a point, we require the use of shape functions. If \\(\\xi\\) is a parametric coordinate along the length of the element, the displacements at any value of \\(\\xi\\) can be given by: \\begin{align} u'_{x}(\\xi) &= \\sum_{i=1}&#94;{n} N_{i}(\\xi) u'_{x,n}\\\\ \\mathbf{u}'(\\xi) &= \\mathbf{N}(\\xi)\\mathbf{u}'_e \\\\ \\begin{Bmatrix}u'(\\xi) \\\\ v'(\\xi)\\end{Bmatrix} &= \\begin{bmatrix} N_{1x} & 0 & 0 & N_{2x} & 0 & 0 \\\\ 0 & N_{1y} & N_{1\\theta} & 0 & N_{2y} & N_{2\\theta} \\end{bmatrix} \\begin{Bmatrix} u'_1 \\\\ v'_1 \\\\ \\phi_1 \\\\ u'_2 \\\\ v'_2 \\\\ \\phi_2 \\end{Bmatrix} \\label{eq:shapefunction} \\end{align} Shape functions for frame elements The shape functions for a frame element are defined for \\(-1\\le\\xi\\le1\\) , and requires the length of the element \\(L\\) : \\begin{align} N_{1x}(\\xi) &= (1-\\xi)/2 \\nonumber \\\\ N_{1y}(\\xi) &= [1-\\xi(3-\\xi&#94;2)/2]/2 \\nonumber \\\\ N_{1\\theta}(\\xi) &= \\frac{L(1-\\xi&#94;2)}{8}(1-\\xi) \\nonumber \\\\ N_{2x}(\\xi) &= (1+\\xi)/2 \\nonumber \\\\ N_{2y}(\\xi) &= [1+\\xi(3-\\xi&#94;2)/2]/2 \\nonumber \\\\ N_{2\\theta}(\\xi) &= \\frac{-L(1-\\xi&#94;2)}{8}(1+\\xi) \\label{eq:shapefunctions} \\end{align} In MATLAB , we can write a function to return the shape function matrix: 1 2 3 function [N] = shapefunction ( xi,L ) ... return ; Determining the displacement in MATLAB Once the shape function matrix \\(\\mathbf{N}\\) is known, the displacements at any point can be determined. displacement = shapefunction ( xi , L ( element )) * ue_local where ue_local are the element nodal displacements. ue_local is determined by picking out the relevant nodal displacements for the element of interest from the global solution vector, and transforming back to the element's local coordinate system \\((x',y')\\) . To get displacements along the element, we can increment \\(\\xi\\) , e.g. xi = -1:0.1:1 . Derived quantities Once displacements are known, the derived quantities (strains and stresses) can be calculated. The strain and bending moment are given by: \\begin{align} \\varepsilon_{x'}(x',\\bar{y}) &= \\frac{\\mathrm{d}u'}{\\mathrm{d}x'} -\\bar{y}\\frac{\\mathrm{d}&#94;2v'}{\\mathrm{d}x'&#94;2} \\label{eq:strain} \\\\ M(x') &= EI \\frac{\\mathrm{d}&#94;2v'}{\\mathrm{d}x'&#94;2} \\label{eq:bendingmoment} \\end{align} \\(\\bar{y}\\) is the distance from the neutral axis \\(\\frac{\\mathrm{d}u'}{\\mathrm{d}x'}\\) is the mean axial strainâ-this is the same as it is for the truss element (previous lecture) \\(-\\bar{y}\\frac{\\mathrm{d}&#94;2v'}{\\mathrm{d}x'&#94;2}\\) is the bending strain Once the strains are known, calculating the stress is trivial. Differentiating the displacements We know the displacements in terms of the parametric coordinate, \\(\\xi\\) , from equation \\eqref{eq:shapefunction}. This parametric coordinate is a transform of the element coordinate system: The range \\(0 \\le x' \\le L\\) is mapped to \\(-1 \\le \\xi \\le +1\\) i.e. \\begin{align} \\xi(x') &= 2\\frac{x'}{L} - 1 \\label{eq:xixtransform} \\end{align} if \\begin{align} \\mathbf{u}'(\\xi) &= \\mathbf{N}(\\xi) \\mathbf{u}'_{e} \\end{align} then \\begin{align} \\frac{\\mathrm{d}\\mathbf{u}'(\\xi)}{\\mathrm{d}x'} &= \\frac{\\mathrm{d}\\mathbf{N}(\\xi)}{\\mathrm{d}x'} \\mathbf{u}'_{e} \\end{align} ( \\(\\mathbf{u}'_e\\) are the discrete (nodal) values of the displacement, they are not a differentiable function.) Differentiating the shape function The shape functions, given in equations \\eqref{eq:shapefunctions}, are given in terms of \\(\\xi\\) . To differentiate with respect to the local coordinate system ( \\(x'\\) ): \\begin{align} \\frac{\\mathrm{d}\\mathbf{N}}{\\mathrm{d}x'} &= \\frac{\\mathrm{d}\\mathbf{N}}{\\mathrm{d}\\xi} \\frac{\\mathrm{d}\\xi}{\\mathrm{d}x'} \\end{align} where \\(\\mathrm{d}\\xi/\\mathrm{d}x'\\) is given by differentiating \\eqref{eq:xixtransform}, and is known as the Jacobian ( \\(J\\) ) of the transform. Similarly, \\begin{align} \\frac{\\mathrm{d}&#94;2\\mathbf{N}}{\\mathrm{d}x'&#94;2} &= \\frac{\\mathrm{d}}{\\mathrm{d}x'} \\frac{\\mathrm{d}\\mathbf{N}}{\\mathrm{d}x'} \\nonumber \\\\ &= \\frac{\\mathrm{d}}{\\mathrm{d}x'} \\frac{\\mathrm{d}\\mathbf{N}}{\\mathrm{d}\\xi} \\frac{\\mathrm{d}\\xi}{\\mathrm{d}x'} \\nonumber \\\\ &= \\frac{\\mathrm{d}}{\\mathrm{d}\\xi} \\frac{\\mathrm{d}\\mathbf{N}}{\\mathrm{d}\\xi} \\frac{\\mathrm{d}\\xi}{\\mathrm{d}x'} \\frac{\\mathrm{d}\\xi}{\\mathrm{d}x'} \\nonumber \\\\ &= \\frac{\\mathrm{d}&#94;2\\mathbf{N}}{\\mathrm{d}\\xi&#94;2} \\left( \\frac{\\mathrm{d}\\xi}{\\mathrm{d}x'} \\right) &#94;2 \\end{align} Postprocessing in MATLAB We could write some functions, perhaps function N1 = shapefunction_derivative_1(xi,L) and function N2 = shapefunction_derivative_2(xi,L) to return the shape function derivative matrices. Since the shape functions are functions of \\(L\\) , they will need to be calculated for each element individually. The Jacobian is also a function of \\(L\\) , so will also be calculated for each element. Then the derivatives can be calculated in the same form as equation \\eqref{eq:shapefunction}: \\begin{align} \\frac{\\mathrm{d}\\mathbf{u}'}{\\mathrm{d}x'} &= J \\cdot \\mathbf{N}&#94;{(1)} \\mathbf{u}'_{e} \\\\ \\frac{\\mathrm{d}&#94;{2}\\mathbf{u}'}{\\mathrm{d}x'&#94;{2}} &= J&#94;2 \\cdot \\mathbf{N}&#94;{(2)} \\mathbf{u}'_{e} \\end{align} where \\(J\\) is the Jacobian, and bracketed superscripts denote derivative with respect to the parametric coordinate system. We now have sufficient information to calculate strains (and stresses) from equation \\eqref{eq:strain} Postprocessor and plotting In the previous lecture, the results of the analysis were presented as a MATLAB vector of values. MATLAB has some powerful plotting functions, so we can try to visualize these results to make them easier to understand. The problem Saving the results So that we don't have to re-run the whole model every time we want to create a plot, we can save the results to a file. This step isn't necessary for the type of problems we might be solving, but when the models become larger and take a significant amount of time to run, it is useful to be able to keep a copy of the solution vector so that it can be processed at a later date. MATLAB has a function to allow any variable in memory to be saved to a .mat file: save ( filename , 'variable1' , 'variable2' ,. . .); Any string can be given as the filename ( i.e. filename should be the name of a string variable, or the string variable itself, enclosed in 'inverted commas' ). If an extension for the filename isn't specified, most versions of MATLAB will add a .mat at the end. These variables can be re-read back into memory with the command: load ( filename , '-mat' ); The figure window The MATLAB command figure creates a new window for a figure (or plot). All of the plotting commands create their own figure windows, so it's not necessary to explicitly create a âfigure'. However, it's useful to use this command to ensure that a plot is created on a new figure window, and not an existing window. The plot command The plot command in its simplest form takes two arguments: a vector of \\(x\\) -values and a vector of \\(y\\) -values, e.g. >> x = 1 : 10 ; >> y = x .&#94; 2 ; >> plot ( x , y ) Formatting the plot A third argument is used in the plot command to control the appearance of the plotted line. Some common options are: - - default -- - dashed : - dotted -. - dash-dot o - circle markers + - plus sign markers * - star markers x - cross markers r,g,y,b,k - colour: red, green, yellow, blue, black Using plot styles plot ( nodal_coordinates (:, 1 ), nodal_coordinates (:, 2 ), ... 'ko' , 'MarkerSize' , 8 , 'MarkerFaceColor' , 'k' ); The full details on the capability of the plot command are given by typing help plot at the MATLAB command prompt. Plot lines To plot the elements, we can use the line command. Before we do this, we use the command hold on ; to âhold' the plot, i.e. use the same figure for the next lines rather than creating a new figure window. The line command is similar to the plot command in that it takes a list of \\(x\\) and \\(y\\) coordinates. We can use it in a loop, to plot one line (with two pairs of \\((x,y)\\) coordinates) for every element: line ([ x1 x2 ] ' ,[ y1 y2 ] ' ); Adding colour The line function also takes an argument color (note the incorrect spelling). Instead of giving the lines colours like âb' for blue or âr' for red, we can be more specific about the colour: the red, green and blue components can be specified as a row vector, using values between 0â1. Some examples are: [0,0,0] - black [1,0,0] - red [0,1,0] - green [0,0,1] - blue [1,0,1] - purple [1,1,1] - white [0.5,0,0.5] - dark purple We could use the colour to represent one of the postprocressed results, e.g. stress or strain. line ( x , y , 'color' ,[ 1 , 0 , 1 ]) The finished postprocessor with displacements This is what we're aiming for: The displacement is shown by plotting \\(\\mathbf{x} + s\\mathbf{u}\\) , where \\(s\\) is a scaling factor. The colour represents the stress in the elements: blue is the lowest stress, red is the highest. The displacements for frame elements If the displacements are interpolated using the shape functions (at e.g. xi = -1:0.1:1 ), we can determine the displacements and plot the shape of a frame element. When plotting the line using line(x,y) , the parameters x and y will both be vectors. The line command does not allow for change in colour along the length of a single line, so we can't use this command to plot variables that are a function of \\(x'\\) , such as bending moment. Conclusions We now have a pretty complete programme for performing both truss and frame analysis: it can incorporate boundary conditions aligned in the global or the element coordinate systems it can also calculate the derived quantities in the postprocessor using shape functions and their derivatives We should have an idea of the process of writing a MATLAB programme, including how to step through the code using the debugger to look for errors, and we can also use MATLAB to create graphical output to help with the interpretation of results Author contact details Amit Visrolia http://people.bath.ac.uk/av236 2E-4.9, Mechanical Engineering, University of Bath a.visrolia@bath.ac.uk if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Notes","url":"//amit.visrolia.net/matlabbeamfe2.html","title":"Introduction to Matlab: lecture 4"},{"text":"Debugging The last lectures introduced MATLAB , then focussed on developing the structure of the solver part of the finite element programme. This lecture, we look at the process of debugging a programme in MATLAB . By the end of this lecture, the students should be able to: Debug scripts and functions written in MATLAB Debugging MATLAB scripts and functions It's unlikely that the MATLAB scripts and functions that you write will work perfectly first time: they will have bugs . The process of identifying and eliminating these is called debugging , and MATLAB has some useful tools to help. Bugs The easiest type of bug to find is one that prevents MATLAB from running your programme. MATLAB presents an error message in the command window, along with an explanation of why it has stopped, and where the error is. ??? Attempted to access nodes ( 3 , 2 ); index out of bounds because size ( nodes )=[ 2 , 6 ]. Error in ==> elementL at 3 dy = nodes ( elements ( e , 2 ), 2 ) - nodes ( elements ( e , 1 ), 2 ); Error in ==> globalK at 6 L = elementL ( nodes , elements , el ); If MATLAB knows where the error is, you can click on the script or function name to open the MATLAB Editor and go to the correct line in the appropriate file to make the corrections. MATLAB also traces the error: here, the error is in function elementL , which was called by another function, globalK . More difficult to track down are bugs that don't prevent MATLAB from running your code, but which produce incorrect answers. To use the debugging tools, we should have some idea of where the bug might be, and which line(s) of code that we are interested in. Then, we can set a breakpoint in the code. A breakpoint is a point in the code where instead of continuing as MATLAB would normally do, MATLAB will pause. This allows examining of the variables that are in memory at this point. Setting breakpoints for a run A breakpoint is set in a MATLAB file from the MATLAB editor. Any line that can have a breakpoint set has a little - next to the line number. The breakpoint is set or cleared by either clicking on the - , or clicking on the icon The code is run by using the function name at the command line as usual, or by clicking on the icon. When MATLAB reaches the breakpoint, it pauses, and indicates which step it is at with a little green arrow next to the line: During a breakpoint When MATLAB pauses for a breakpoint, it returns control to the user in the command window. The Command prompt is slightly different to the normal one: 3 dy = nodes ( elements ( e , 2 ), 2 ) - nodes ( elements ( e , 1 ), 2 ); K >> The first line gives the line number in the file at which MATLAB has paused (and a copy of the line). The K>> is the MATLAB debug prompt From here, all the usual MATLAB commands are available. Additionally, you have access to all the variables that are in memory at this point in the programme: they are listed in the Workspace pane in MATLAB . At this point, it's worth checking that the variables contain what you expect them to contain! Once we're done inspecting the programme at it's current state, there are a few options: Using the `Step' button, MATLAB will run the current line, and pause at the next line. Using this option, we can run a function one line at a time, checking that each step does what you expect it to. With the `Step in' button, instead of just stepping to the next line in a function or script file, we can follow the flow of our programme into another script file. If we decide that the bug is not within the current function, the `Step out' button runs the remainder of the function, and pauses in whatever the parent function was. If we want to skip over a lot of code, we can run it to the next breakpoint (or if there are none, to the end of the programme). Exit debug mode, without running the rest of the programme. Summary of Debugging commands Run file Set or Clear breakpoint Clear all breakpoints in all files Exit debug mode Step (to the next line) Step in (to a function file) Step out (of the function file) Continue (to the next breakpoint)","tags":"Notes","url":"//amit.visrolia.net/matlabdebugging.html","title":"Introduction to Matlab: lecture 3"},{"text":"Astrophotography Use a shutter speed faster than 600/f to avoid star trails. Sunny 16 On a sunny day set aperture to f/16 and shutter speed to the 1/ ISO for a subject in direct sunlight. Moony 11/8/5.6 For moonlit shots, set aperture to 11/8/5.6 for full/half/quarter moon, and shutter speed to 1/ ISO . Handheld shooting If you're shhoting hand-held, use a shutter speed faster than 1/f for reduced shake. Sunset shots Meter an area of the sky above the sun (without the sun in shot) then take the shot. Reduce further by 1 stop to make it look like ~1/2 hour later.","tags":"Notes","url":"//amit.visrolia.net/photography.html","title":"Photography rules-of-thunb"},{"text":"Beam Finite Element Analysis Here, we're going to take a brief overview of the steps required in producing a Finite Element ( FE ) programme for beam analysis. Not all the answers are in these notes! There should be enough hints to produce a 2D FE code. If we can produce a 2D code, extending it to 3D should be trivial. Finite element analysis Parts of an FE program Problem definition component shape materials loads Preprocessor digital representation: the âgeometry' mathematical representation of material behaviour discretization: âmeshing' Solver form element stiffness matrices assemble global matrices apply boundary conditions solve for nodal unknowns Postprocessor calculate derived quantities, e.g. strains, stresses, thermal gradients plotting and visualization tools Useful output does my component work? Problem definition Truss or beam elements defined by length \\(L\\) , area \\(A\\) , modulus \\(E\\) pin-jointed uniform strain fixed locations, sliding joints, free joints Solve for displacements \\(\\mathbf{u}\\) (vector quantity), strains and stresses. Pre-processor The problem definition already represents a suitable mesh: âelements' correspond to beams, ânodes' correspond to joints. a node is defined by its coordinates an element is defined by the nodes it connects We can input these data directly in the form of a list (of course, MATLAB calls this a âmatrix'). It's also useful to input the moduli and areas: also as a list, since they might not be the same for all beams. 1 2 3 4 5 6 7 8 nodal_coordinates = [ 0 , 0 ; 1 , 0 ; 1 , 1 ]; % 1 row per node element_nodes = [ 1 2 ; 2 3 ; 1 3 ]; % 1 row/element element_area = [ 6 ; 6 ; 6 ] * 1e-4 ; % 1 row/element element_modulus = [ 210 ; 210 ; 210 ] * 1e9 ; % note that for the area and modulus, I've used a short % hand form by multiplying a vector by a scalar nodal_forces = [ 0 0 ; 0 0 ; 1000e3 0 ]; % each node has % a vector force Remember: unit consistency! Information about the model >> nodal_coordinates % the full nodal coordinates list nodal_coordinates = 0 0 1 0 1 1 >> element_nodes % the full element nodes list element_nodes = 1 2 2 3 1 3 >> % coordinates of node 2 >> nodal_coordinates ( 2 ,:) % from nodal_coordinates, pick row 2, all columns (x and y) ans = 1 0 >> % nodes of element 2 >> element_nodes ( 2 ,:) % from element_nodes, pick row 2, all columns (all nodes) ans = 2 3 >> % coordinates of element 2 >> nodal_coordinates ( element_nodes ( 2 ,:),:) % find the coordinates of the nodes of element 2 ans = 1 0 1 1 >> element_area ( 2 ) % the cross-sectional area of element 2. Since this is a vector ans = % we can be lazy and omit the other index (since it will 0.0006 % always be 1) >> element_modulus ( 2 ) % the modulus of element 2 ans = 2.1000e+11 What about the element lengths? The length of the element is also a factor. However, we don't need to input this information, since is is implicit in the nodal coordinates and element definitions. We could write a function to calculate it for us: 1 2 3 4 5 function [element_length] = calculate_length ( arguments ) % A function to calculate the length(s) of an element/ all the elements % define the function here! return ; The function will implement (for the 2D case): \\begin{align} L = \\sqrt{(x_2 - x_1)&#94;2 + (y_2 - y_1)&#94;2} \\end{align} Which arguments? A function is self contained, so it only has access to the variables that are passed to it. Should we calculate all the lengths in one go, or calculate the length of one specified element? Solverâgeneral A reminder of the global system being solved ( \\(\\mathbf{u}\\) is the unknown): \\begin{align} [K]\\{u\\} = \\{F\\} \\end{align} This is a simultaneous system of equations. Each element must satisfy: \\begin{align} [K&#94;e]\\{u&#94;e\\} = \\{F&#94;e\\} \\end{align} The element solution vector ( \\(\\mathbf{u}&#94;e\\) ) defines the displacement of the element. It has 4 components, or degrees-of-freedom : \\(u_1, v_1, u_2, v_2\\) . We can choose to order these: \\begin{align} \\mathbf{u}&#94;e = \\begin{Bmatrix} u_1\\\\v_1\\\\u_2\\\\v_2 \\end{Bmatrix} \\text{ or } \\begin{Bmatrix} u_1\\\\u_2\\\\v_1\\\\v_2 \\end{Bmatrix} \\end{align} The global solution vector is similar. We should choose and stick to one DOF ordering system. Solverâelement matrices, local coordinates We know the stiffness of a beam, \\(k\\) , in its longitudinal direction is given by: \\begin{align} k = \\frac{EA}{L} \\end{align} This corresponds to the direction \\(x'\\) in the local coordinate system \\((x',y')\\) , with associated displacements \\((u',v')\\) , i.e. the system: \\begin{align} \\begin{bmatrix} k & 0 & -k & 0 \\\\ 0 & 0 & 0 & 0 \\\\ -k & 0 & k & 0 \\\\ 0 & 0 & 0 & 0 \\end{bmatrix} \\begin{Bmatrix} u'_1\\\\v'_1\\\\u'_2\\\\v'_2 \\end{Bmatrix} = \\begin{Bmatrix} F&#94;{x'}_{1}\\\\F&#94;{y'}_{1}\\\\F&#94;{x'}_{2}\\\\F&#94;{y'}_{2} \\end{Bmatrix} \\end{align} Solverâlocal element matrices in MATLAB We know how to get \\(E,A,\\text{ and }L\\) from the input data for a given element. We know how to create empty matrices, and how to get data into them. So, creating the element stiffness matrices in the element coordinate system ( \\(\\mathbf{K}'&#94;e\\) ) should be simple! Once we know how to calculate a single element, we can wrap the code in a loop to calculate for all the elements: 1 2 3 4 5 6 7 8 9 10 11 12 13 for element = 1 : size ( element_nodes , 1 ) % total number of elements is given by the % number of rows in the element nodes list E = element_modulus ( element ); A = ... % collect all the parameters we need to ... % calculate k k = ... % calculate k Ke_local = zeros ( 4 , 4 ); % prepare an empty matrix for the local element % stiffness matrix Ke_local ( 1 , 1 ) = ... % put the relevant terms into the matrix! end Solverâelement matrices in global coordinates Each node will have a displacement. So far, we've described that displacement in a local (element) coordinate system \\((x',y')\\) . Where a node is shared by two elements, which element's coordinate system should be used? All the displacements shoud be expressed in the global coordinate system , \\((x,y)\\) . The global and local coordinate systems can be transformed using the transformation matrix, \\(\\mathbf{T&#94;{\\ast}}\\) (in 2D): \\begin{align} \\begin{Bmatrix} u' \\\\ v' \\end{Bmatrix} &= \\begin{bmatrix} \\cos\\theta & \\sin\\theta \\\\ -\\sin\\theta & \\cos\\theta \\end{bmatrix} \\begin{Bmatrix} u \\\\ v \\end{Bmatrix} & \\mathbf{u}' &= \\mathbf{T&#94;{\\ast}}\\mathbf{u} \\end{align} Which allows us to perform the transform of the element local stiffness matrix: \\begin{align} \\mathbf{K}&#94;e = \\mathbf{T}&#94;T \\mathbf{K}'&#94;{e} \\mathbf{T} \\end{align} where in the case of a 2 node element, \\begin{align} \\mathbf{T} = \\begin{bmatrix}\\mathbf{T&#94;{\\ast}} & 0 \\\\ 0 & \\mathbf{T&#94;{\\ast}}\\end{bmatrix} \\end{align} Element transform in MATLAB We need to know the angle, \\(\\theta\\) of the element. We could write a function, similar to our calculate_length function: 1 2 3 4 5 6 function [element_angle] = calculate_angle ( arguments ) % A function to calculate the angle of the elements % Think about which variables need to be passed in to calculate % the angles % MATLAB's atan2 function might be useful here... return ; We could also do with a function to give us a transform matrix for any angle theta : 1 2 3 4 5 6 function [T] = transformmatrix ( theta ) % A function to calculate the transform matrix T = zeros ( 4 , 4 ); % create an empty matrix T ( 1 , 1 ) = cos ( theta ); % start filling it in... ... return ; Then, in the element loop, we can add the following lines: 1 2 3 theta = element_angle ( element ); % get the angle of the current element T = transformmatrix ( theta ); % calculate the transform matrix Ke = T ' * Ke_local * T ; % transform the local element stiffness matrix The global stiffness matrix Now we have \\(\\mathbf{K}&#94;e\\) for all the elements, we can construct the global stiffness matrix. This is a process called assembly or scattering . Each of our elements had 4 DOF , (2 displacement components, \\(u\\) and \\(v\\) , at each end of the element), and hence a \\(4\\times4\\) \\(\\mathbf{K}&#94;e\\) . We can calculate the size of \\(\\mathbf{K}\\) using the total number of degrees of freedom: globaldof = size ( nodal_coordinates , 1 ) * size ( nodal_coordinates , 2 ); Each element's stiffness contribution to the global stiffness matrix must be added in at the appropriate position. Scattering Example: element 3 connects nodes 1 and 3 ( element_nodes(3,:) ): Element stiffness matrix: \\begin{align*} \\begin{array}{r} 1, \\mathbf{1}, x \\\\ 1, \\mathbf{1}, y \\\\ 2, \\mathbf{3}, x \\\\ 2, \\mathbf{3}, y \\\\ \\end{array} \\begin{bmatrix} k&#94;{3}_{11} & k&#94;{3}_{12} & k&#94;{3}_{13} & k&#94;{3}_{14} \\\\ k&#94;{3}_{21} & k&#94;{3}_{22} & k&#94;{3}_{23} & k&#94;{3}_{24} \\\\ k&#94;{3}_{31} & k&#94;{3}_{32} & k&#94;{3}_{33} & k&#94;{3}_{34} \\\\ k&#94;{3}_{41} & k&#94;{3}_{42} & k&#94;{3}_{43} & k&#94;{3}_{44} \\end{bmatrix} \\end{align*} Global stiffness matrix: \\begin{align*} \\rightarrow \\begin{bmatrix} k&#94;{3}_{11} & k&#94;{3}_{12} & 0 & 0 & k&#94;{3}_{13} & k&#94;{3}_{14} \\\\ k&#94;{3}_{21} & k&#94;{3}_{22} & 0 & 0 & k&#94;{3}_{23} & k&#94;{3}_{24} \\\\ 0 & 0 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 0 & 0 \\\\ k&#94;{3}_{31} & k&#94;{3}_{32} & 0 & 0 & k&#94;{3}_{33} & k&#94;{3}_{34} \\\\ k&#94;{3}_{41} & k&#94;{3}_{42} & 0 & 0 & k&#94;{3}_{43} & k&#94;{3}_{44} \\end{bmatrix} \\begin{array}{l} \\mathbf{1}, x \\\\ \\mathbf{1}, y \\\\ \\mathbf{2}, x \\\\ \\mathbf{2}, y \\\\ \\mathbf{3}, x \\\\ \\mathbf{3}, y \\end{array} \\end{align*} ( \\(1\\) :local or element node numbers; \\(\\mathbf{1}\\) : global node numbers) The scattering process in MATLAB 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 K = zeros ( ); % create an empty stiffness matrix of appropriate size for element = 1 : size ( element_nodes , 1 ) ... % calculate all the terms necessary to give: Ke = ... % element stiffness matrix for local_node_number_r = 1 : 2 % loop through each node in the ROWS direction % First we figure out which global node this refers to: global_node_number_r = element_nodes ( element , local_node_number_r ); % Then we figure out where in the stiffness matrix the terms are: local_index_r = 2 * ( local_node_number_r - 1 ) + [ 1 2 ]; global_index_r = 2 * ( global_node_number_r - 1 ) + [ 1 2 ]; for local_node_number_c = 1 : 2 % loop through each node in the COLUMNS direction % Follow the same process for the COLUMNS global_node_number_c = element_nodes ( element , local_node_number_c ); local_index_c = 2 * ( local_node_number_c - 1 ) + [ 1 2 ]; global_index_c = 2 * ( global_node_number_c - 1 ) + [ 1 2 ]; % Then, we can add the relevant terms to the global stiffness matrix, K K ( global_index_r , global_index_c ) = K ( global_index_r , global_index_c ) ... + Ke ( local_index_r , local_index_c ); end end end The force vector We have our stiffness matrix. We also need the force vector, \\(F\\) . Remember, when we input this, we input it in the form: \\begin{align} \\begin{bmatrix} F_{x}&#94;{1} & F_{y}&#94;{1} \\\\ F_{x}&#94;{2} & F_{y}&#94;{2} \\\\ F_{x}&#94;{3} & F_{y}&#94;{3} \\end{bmatrix} \\end{align} but we really need it as a vector, with the same ordering scheme as the stiffness matrix: \\begin{align} \\begin{bmatrix} F_{x}&#94;{1} \\\\ F_{y}&#94;{1} \\\\ F_{x}&#94;{2} \\\\ F_{y}&#94;{2} \\\\ F_{x}&#94;{3} \\\\ F_{y}&#94;{3} \\end{bmatrix} \\end{align} We need to perform a similar scattering operation to form \\(F\\) . We only need 1 loop, since there is only 1 column in the vector. Applying boundary conditions At the moment, the system is unconstrained: this means that there is no unique solution, and rigid body motion can occur. We need to input some boundary conditions: \\begin{align} \\begin{bmatrix} 1 & 1 \\\\ 0 & 1 \\\\ 0 & 0 \\end{bmatrix} \\begin{array}{l} \\text{node 1: constrained (1) in x and y directions} \\\\ \\text{node 2: sliding joint, constrained in y only} \\\\ \\text{node 3: free: not constrained at all} \\end{array} \\end{align} where \\(1\\) indicates that a degree of freedom is constrained to no displacement. The boundary condition is applied by eliminating the row and column relevent to the degree of freedom in the system of equations. Applying boundary conditions in MATLAB Removing rows and columns from the matrix will change their size, and we might lose track of which row/column corresponds to which displacement. Instead, we can achieve the same by replacing the rows and columns by the relevant bits of the identity matrix: \\begin{align} \\begin{bmatrix} k_{11} & k_{12} & k_{13} & k_{14} \\\\ k_{21} & k_{22} & k_{23} & k_{24} \\\\ k_{31} & k_{32} & k_{33} & k_{34} \\\\ k_{41} & k_{42} & k_{43} & k_{44} \\end{bmatrix} \\begin{Bmatrix} u_1 \\\\ v_1 \\\\ u_2 \\\\ v_2 \\end{Bmatrix} = \\begin{Bmatrix} F_{1}&#94;{x} \\\\ F_{1}&#94;{y} \\\\ F_{2}&#94;{x} \\\\ F_{2}&#94;{y} \\end{Bmatrix} \\end{align} Constraining \\(v_1=0\\) , \\begin{align} \\begin{bmatrix} k_{11} & 0 & k_{13} & k_{14} \\\\ 0 & 1 & 0 & 0 \\\\ k_{31} & 0 & k_{33} & k_{34} \\\\ k_{41} & 0 & k_{43} & k_{44} \\end{bmatrix} \\begin{Bmatrix} u_1 \\\\ v_1 \\\\ u_2 \\\\ v_2 \\end{Bmatrix} = \\begin{Bmatrix} F_{1}&#94;{x} \\\\ 0 \\\\ F_{2}&#94;{x} \\\\ F_{2}&#94;{y} \\end{Bmatrix} \\end{align} Applying this process in MATLAB should be easy: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 % in a loop iterating over the boundary conditions... if boundary_condition ( i ) == 1 % check if we need to constrain displacement % STIFFNESS MATRIX K ( i ,:) = 0 ; % set the whole row to zero K (:, i ) = 0 ; % set the whole column to zero K ( i , i ) = 1 ; % set the term on the diagonal to 1 % FORCE VECTOR F ( i ) = 0 ; % set the term in the force vector to zero end Solving Now all our hard work is done. The system is set up, and all that remains is for MATLAB to solve it for the unknowns (in our case, displacements). We saw how to do this using the MATLAB backslash operator earlier: 1 2 % Solve the system [K]{u} = {F} for unknown {u} u = K \\ F ; Post processor Once the displacements \\(\\mathbf{u}\\) are determined, calculating the strain shouldn't be difficult. Strain is given by: \\begin{align} \\varepsilon_{x'} = \\frac{\\partial u'}{\\partial x'} = \\frac{\\Delta L}{L} \\end{align} where \\(\\Delta L\\) is the change in length of the element. The new length of the element (after displacement) is given by the length calculated using the original coordinates, \\(\\mathbf{x}\\) , plus the displacements \\(\\mathbf{u}\\) . In fact, we could probably reuse our function calculate_length() . Knowing the strains, stresses are then trivial to calculate. Conclusions Not all the required code has been given here, but there is enough to construct a simple beam element finite element code, in 1-, 2- or 3-D as required. Using information from earlier in the FE course, it should be possible to add in moment sustaining elements. The easiest way to get started in MATLAB is just to play with it Begin by using it as a calculator - a single operation at a time, rather than as a full programming language MATLAB âthinks' in matrices: once the matrices are defined, MATLAB understands what it means to e.g. multiply matrices Even when using it as a programming language, it's easy to go back to the command line and try typing a line in to see what it does if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Notes","url":"//amit.visrolia.net/matlabbeamfe.html","title":"Introduction to Matlab: lecture 2"},{"text":"Matlab basics The purpose of these lectures is to introduce the students to the MATLAB environment, and use it to solve simple beam finite element problems. At the end of the lectures, the students should have enough information to be able to: Use MATLAB to write complex programmes using multiple functions Use the MATLAB help to get information on new commands and functions Solve the tutorial questions Introduction to Matlab What is MATLAB ? MATLAB is an interactive calculation environment, designed for working with matrices: the MATrix LABoratory MATLAB is also a powerful, but simple and easy-to-use programming language MATLAB also provides a number of `toolboxes' to extend its core functionality MATLAB is available to use on the GIGATERMS server. MATLAB is also available from the BUCS website: University homepage>Computing Services>Software> Secure Downloads Tool Why use MATLAB for finite element analysis? Finite element analysis is a simultaneous equation problem, and we can describe it using matrices: \\begin{align} [K]\\{u\\} = \\{F\\} \\end{align} MATLAB works natively with matrices as a data type. It can solve such a system by typing in: u = K \\ F Many of the steps involved are also matrix operations, such as coordinate transforms, or matrix inversions. A programming language is also useful to perform repeated operations, such as those applied to elements or nodes in a finite element program. The MATLAB desktop environment Current directory This is where MATLAB first looks for the files that are to be run. Useful to create a new directory for a project. Files A list of all the function and script files in the current directory. Command window This is where commands are entered to MATLAB , and where the results are printed out. Command prompt The >> prompt is where data and commands are typed in. Variables A list of all the variables that are currently held in memory. Simple calculations The command window can be used as a simple calculator ( >> is the MATLAB prompt, you don't need to type it in!): >> 2 * 2 % multiplication ans = 4 >> sqrt ( 2 ) / 2 % square-root function ans = 0.7071 >> pi * 5 &#94; 2 % built-in variable pi ans = 78.5398 >> cos ( pi / 3 ) % trigonometric functions ans = 0.5000 Variables Variables can be used to store values for use later >> clear all % clear existing variables from memory >> r = 5 ; % radius r >> % note the semi-colon at the end to suppress MATLAB output >> % also note the use of the percent symbol (%) to insert comments >> area1 = pi * r &#94; 2 area1 = 78.5398 >> r = 10 ; >> area2 = pi * r &#94; 2 area2 = 314.1593 >> area2 / area1 ans = 4 Types of variables Any type of data can be stored in a variable, e.g. i = 4 % integer variables j = 4.5 % floating point variables k = 1e-3 % floating point entered in exponential form l = 'some text' % a string of characters Matrices can also be stored in variables. Note: the MATLAB notation 1e-3 is used to represent \\(1 \\times 10&#94;{-3}\\) What is a matrix? A matrix is just a 2D array of values. The matrix can be entered at the command line, surrounding the values with square brackets [ ] . Columns are separated by commas or spaces, rows by semi-colons or line breaks: >> x = [ 1 2 ; 3 4 ] % entered on a single line x = 1 2 3 4 >> y = [ 5 , 6 ; 7 , 8 ] % can include commas if this helps readability y = 5 6 7 8 >> z = [ 9 10 % press enter before the matrix is ended 11 12 ] % with ], and MATLAB starts a new row z = 9 10 11 12 Some useful matrices >> x = zeros ( 2 ) % a square 2x2 matrix of zeros x = 0 0 0 0 >> x = zeros ( 2 , 3 ) % a rectangular zeros matrix % note! row, column order x = 0 0 0 0 0 0 >> y = ones ( 2 ) % a matrix of ones (here, 2x2) % can also be rectangular y = 1 1 1 1 >> z = eye ( 2 ) % a 2x2 identity matrix, I % note! this must be square z = 1 0 0 1 Some terminology Everything is a matrix in MATLAB ! a scalar (single integer or floating point number) is a \\(1\\times1\\) matrix a vector or a list is simply a matrix where one of the dimensions is 1, e.g. a column vector ( zeros(3,1) ) or a row vector ( zeros(1,3) ). a string is a vector of characters an array is a term used for a grid of values: i.e. , a matrix! Some of these terms will be used interchangeably in the remainder of the notes. Addressing matrices Now that we have matrices full of zeros or ones, how do we get some useful information in and out of them? >> x = magic ( 3 ) % a built-in function to create a 3x3 % magic-square (all rows, columns and diagonals % add up to the same value) x = 8 1 6 3 5 7 4 9 2 >> x ( 3 , 2 ) % extracting a certain value (note row, columns % order again) ans = 9 >> x ( 3 , 2 ) = 0 % setting the value of a certain element x = 8 1 6 3 5 7 4 0 2 Addressing matrices: the colon operator} To address an entire row or column, we can use the colon ( : ) operator >> x = magic ( 3 ); % the same matrix as the previous slide >> x ( 3 ,:) % '3rd row, all the columns' ans = 4 9 2 >> x (:, 2 ) % 'all the rows, 2nd column' ans = 1 5 9 >> x ( 3 ,:) = [ 0 0 0 ] % replacing the 3rd row x = 8 1 6 3 5 7 0 0 0 The colon operator Without any parameters, the colon represents an entire row or column. The colon can also be used with parameters, to represent a range of values. >> x = 1 : 10 % all the numbers in the range from 1-10 x = 1 2 3 4 5 6 7 8 9 10 >> y = 1 : 3 : 30 % all the numbers in the range from 1-30, in steps of 3 y = 1 4 7 10 13 16 19 22 25 28 >> z = 5 : - 0.5 : 1 % the range 5-1, in steps of -0.5 z = 5.0000 4.5000 4.0000 3.5000 3.0000 2.5000 2.0000 1.5000 1.0000 Specific matrix addressing with the colon We can combine the ârange' use of the colon to pick out some specific values from a larger matrix: >> x = magic ( 4 ) % a 4x4 magic square x = 16 2 3 13 5 11 10 8 9 7 6 12 4 14 15 1 >> y = 1 : 2 : 4 % every other number between 1-4 y = 1 3 >> z = x ( y , y ) % pick just these values out from x z = 16 3 9 6 Matrix properties In addition to getting data from the matrix, we can get data about the matrix: >> x = magic ( 4 ); % as previously >> [ a b ] = size ( x ) % the size of matrix x a = 4 b = 4 >> min ( x ) % the minimum value in each column of x ans = 4 2 3 1 >> max ( x ) % the maximum value in each column of x ans = 16 14 15 13 >> mean ( x ) % the mean value of each column of x ans = 8.5000 8.5000 8.5000 8.5000 More on matrix sizes The size command is very useful, since it will let us write programmes where we don't know before hand how large our matrices and vectors will be. The size command can be used as follows: >> x = zeros ( 5 , 2 ); % an example matrix with 5 rows and 2 columns >> [ a b ] = size ( x ) % as we've seen before, we can get the dimensions using size() a = 5 b = 2 % if we know which dimension we want, we can specify it as an optional argument % to the size function >> size ( x , 1 ) % the first dimension of x (i.e. number of rows) ans = 5 >> size ( x , 2 ) % the second dimension of x (i.e. number of columns) ans = 2 % if we have a vector (a matrix with one of the dimensions as 1) we can also use >> y = zeros ( 1 , 6 ); % a row vector >> z = zeros ( 8 , 1 ); % a column vector >> length ( y ) ans = 6 >> length ( z ) ans = 8 Matrix algebra Matrix algebra can be performed with the MATLAB matrices, e.g. for the system \\(Ax = b\\) , >> A = magic ( 3 ) % a 3x3 magic square A = 8 1 6 3 5 7 4 9 2 >> x = [ 1 ; 2 ; 3 ] % a column vector x x = 1 2 3 >> b = A * x % matrix multiplication to find b b = 28 34 28 >> x = inv ( A ) * b % if b is known, we can find x by inverting A x = 1.0000 2.0000 3.0000 >> x = A \\ b % more efficient than inverting A is using the backslash operator x = 1 2 3 Matrix algebra II Some of the most useful functions are those to find the inverse and transpose of a matrix: >> A = magic ( 3 ) % the 3x3 magic square A = 8 1 6 3 5 7 4 9 2 >> inv ( A ) % the inverse of matrix A ans = 0.1472 - 0.1444 0.0639 - 0.0611 0.0222 0.1056 - 0.0194 0.1889 - 0.1028 >> A ' % the transpose of A, using the inverted comma ans = 8 3 4 1 5 9 6 7 2 Inverting the matrix is a computationally expensive problem. Although a system \\(Ax = b\\) can be solved as \\(x = A&#94;{-1}b\\) , the backslash operator ( A\\b ) uses Gaussian elimination to solve without explicitly calculating \\(A&#94;{-1}\\) . Array algebra MATLAB treats everything as a matrix, but occasionally, we might want to treat a variable as simply a list (or grid) of values, rather than a matrix in the mathematical sense. MATLAB behaves as expected when we multiply a âmatrix' or vector by a scalar, or add two matrices, and also includes a number of piecewise operators . >> x = 1 : 3 ; % x = [1 2 3] >> y = 2 * x % multiply by a scalar y = 2 4 6 >> x + y % add 2 vectors (1D matrices) ans = 3 6 9 >> x .* y % perform a piecewise multiplication (note the dot before the *) ans = 2 8 18 >> x ./ y % perform a piecewise division (note the dot before the /) ans = 0.5000 0.5000 0.5000 Note, matrix algebra rules don't allow us to perform ordinary multiplication between two vectors each of size \\(1\\times3\\) . We could however transpose one of the vectors ( e.g. y = y' ). MATLAB scripting When we want to perform the same actions over and over again, we can save the steps in a MATLAB script. A MATLAB script is just a series of commands, exactly as they would appear if they were typed in at the command prompt. Here, we shall write a script to solve the roots ( \\(y=0\\) ) of the quadratic equation: \\begin{align} y = ax&#94;2 + bx + c \\end{align} A reminder, the solution is given by: \\begin{align} x = \\frac{-b\\pm\\sqrt{b&#94;2 - 4ac}}{2a} \\end{align} MATLAB scriptingâthe editor MATLAB scriptingâexample Using the commands that we already know, we can write the script: 1 2 3 4 5 6 7 8 a = 1 ; % the input parameters: note the semi-colon at the end of the b = - 5 ; % line to stop MATLAB from printing out these lines c = 6 ; % Here, the calculation is performed. x1 = ( - b + sqrt ( b &#94; 2 - 4 * a * c )) / 2 * a x2 = ( - b - sqrt ( b &#94; 2 - 4 * a * c )) / 2 * a % Since there's no semi-colon at the end, the results will be printed out. If we save this file as quadscript.m , we can run it by typing the name quadscript at the command prompt: >> quadscript x1 = 3 x2 = 2 We could keep this script, and change the coefficients every time we wanted to solve a different problem, but there is a way we can write a script that we can use for any problem. Adding interactivity to scripts Instead of including the coefficients in the script ( hard-coding them) we could instead ask the user using the input function: 1 2 3 4 5 6 7 disp ( 'Solving the equation: ax&#94;2 + bx + c' ); % display some info for the user a = input ( 'Please input the value of a:' ); b = input ( 'Please input the value of b:' ); % get parameters typed in c = input ( 'Please input the value of c:' ); x1 = ( - b + sqrt ( b &#94; 2 - 4 * a * c )) / 2 * a % exactly the same as previously x2 = ( - b - sqrt ( b &#94; 2 - 4 * a * c )) / 2 * a Saving as quadscript2.m and running: >> quadscript2 Solving the equation : ax &#94; 2 + bx + c Please input the value of a : 1 Please input the value of b : - 5 Please input the value of c : 6 x1 = 3 x2 = 2 This is useful where we want input from the user, but we can't run a large programme that stops to ask for each new variableâ¦ MATLAB functions A function is a self-contained piece of code that accepts a number of input variables, processes them, and then returns a number of answers. We have already seen some of MATLAB 's built-in functions: cos(x) (and similar trigonometric functions): takes an angle \\(x\\) as its argument , or parameter , and returns the cosine of the angle size(x) : takes a matrix \\(x\\) (remember: everything is a matrix!) and returns two values, the number of rows and the number of columns in the matrix The purpose of functions Functions can be called in a number of ways, e.g. >> cos ( 0.7854 ) % supplying the argument directly to the function ans = 0.7071 >> theta = 0.7854 ; >> cos ( theta ) % supplying a variable to the function ans = 0.7071 >> cos ( pi / 4 ) % evaluating an expression as an argument ans = 0.7071 All three methods here are equivalent. When all the input arguments are known, the function can calculate the outputs with no further intervention from the user. The input arguments can even come from another part of the programme. Defining a function A MATLAB function is created in a file with a .m extension (just as a script). The first line of the script must take the following form, using the keyword function : 1 function [outputs] = function_name ( input_arguments ) The function must be saved with the file name matching the function name (here, function_name.m ). Somewhere, within the function file, all the outputs must be set. Ideally, the function should also end with return; , to return programme control to wherever the function was called from. An example function The file quadratic.m contains the following: 1 2 3 4 5 6 7 function [x1,x2] = quadratic ( a,b,c ) % A function to return the roots of a quadratic equation x1 = ( - b + sqrt ( b &#94; 2 - 4 * a * c )) / 2 * a ; % note the semi-colon to suppress output: we don't need x2 = ( - b - sqrt ( b &#94; 2 - 4 * a * c )) / 2 * a ; % the answer printed every time the function is called return ; \\(a,b,c\\) are the arguments, \\(x1,x2\\) are the return values. A comment is useful to explain what the function does: you may end up using this function in many other programmes, or it may even be used by many other people in their programmes. >> [ x1 , x2 ] = quadratic ( 1 , - 5 , 6 ) x1 = 3 x2 = 2 Getting help MATLAB has a comprehensive online help, which details all the functions and how to use them. Additionally, a free online book, Numerical Computing with MATLAB , is available, written by the inventor of MATLAB , Cleve Moler. Flow control in functions An important part of a programme is its ability to make decisions based on input, and take actions based on that decision. There are two main ways of doing this: 1 2 3 4 5 6 7 if ( condition ) % actions to perform if condition is true elseif ( condition2 ) % actions to perform if condition2 is true else % actions to perform if none of the above were true end or 1 2 3 4 5 6 7 8 switch condition case condition1 % actions to perform if condition==condition1 case condition2 % actions to perform if condition==condition2 otherwise % actions to perform if condition doesn't match any of the above cases end The conditions in both the if and switch expressions are based on logical variables , i.e. those that evaluate to true or false. Logical operators A logical variable can have a value of true or false . Logical variables are normally created as the results of a comparison operation, and used for conditional statements (like if ). The logical operators and their meanings are as follows - a and b are any type of variable: a == b a is equal to b (using a = b is the most common error in if statements) a \\~= b a is not equal to b a < b; a <= b; a > b; a >= b a is less than (or equal to), or greater than (or equal to) b And where a and b are already logical variables themselves: a \\&\\& b ; a \\& b both a and b are true (scalar and vector) a \\|\\| b ; a \\| b either one of a or b is true (including both are true) (scalar and vector) \\~a a special negation operator, i.e. \\(\\sim\\) true is false, and \\(\\sim\\) false is true Conditional statement example Here is an example we might use in a finite element code, to detect if our elements meet a failure criteria: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 if ( abs ( stress ) > = criticalstress ) && ( stress > 0 ) % The abs() function returns the absolute value (or magnitude) of a variable % abs(stress) and criticalstress are numerical variables, the comparison % will return either TRUE or FALSE (i.e. a logical variable) % Similarly, (stress > 0) will return TRUE or FALSE (i.e. a logical variable) % The && operator compares the two logical variables % Here is the case for TRUE, i.e. % abs(stress) >= criticalstress is TRUE % stress > 0 is TRUE disp ( 'Element fails under tension' ); % The disp() function displays a string in the command window elseif ( abs ( stress ) > = criticalstress ) && ( stress < 0 ) % Here, if the first conditional wasn't TRUE, we can try another disp ( 'Element fails under compression' ); else % Here, is the default action to carry out if none of the conditions were TRUE disp ( 'Element does not fail' ); end Looping in functions In addition to conditional decision making, programmes are useful for repeatedly performing the same operation, or performing an operation on a sequence of variables. MATLAB gives us two methods for looping: 1 2 3 4 5 for loop_variable = range % actions to perform using the loop_variable % use when we want to perform the actions a set number of times end or 1 2 3 4 5 6 while condition % actions to perform while condition == TRUE (using the logical operators we % saw earlier % use when we don't know how many times the loop needs to run end Loops are incredibly useful, but there are occasions where their use is unnecessary, and even slows down the programmeâ¦ Avoiding loops An example of where we might want to use a loop is in a finite element programme: if we have a vector of the strains in all of our elements, we might want to work out the stress. Using loops, we could do: 1 2 3 4 5 6 for i = 1 : length ( strains ) % we can let the programme work out how many times % it needs to run the loop % i is the loop variable % the i-th stress is calculated by multiplying the i-th strain by the modulus stresses ( i ) = modulus * strains ( i ); end But since MATLAB is designed (and optimized) to work with matrices (including vectors), we could use instead: 1 2 3 4 5 % if modulus is a scalar (i.e. there is one modulus for all locations) stresses = modulus * strains ; % even if modulus is a vector with a different value at each location, we can use stresses = modulus .* strains ; stresses and strains are still vectors, but we've made the code much simpler to read, as well as much faster. if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Notes","url":"//amit.visrolia.net/matlabbasics.html","title":"Introduction to Matlab: lecture 1"},{"text":"These Introduction to Matlab notes are the lectures I gave to the undergrad mechanical engineering finite element course at the University of Bath in 2010 and 2011. There are four lectures, beginning with an introduction to Matlab for complete beginners, right up to developing a beam finite element solver and postprocessor, and learning along the way how to debug. Lecture 1: Matlab basics Lecture 2: Beam finite element analysis Lecture 3: Debugging in Matlab Lecture 4: Beam finite element analysis 2: postprocessing The completed code is available from my Github for: truss elements frame elements beam elements","tags":"Notes","url":"//amit.visrolia.net/matlabintro.html","title":"Introduction to Matlab"},{"text":"The Helmholtz illusion is where a shape can appear elongated as a result of the stripe pattern on it. The first of these papers, Applying the Helmholtz illusion to fashion: horizontal stripes won't make you look fatter , examines the effect of whether people look taller or fatter as the result of vertical or horizontal stripes. The findings match Hermann von Helmholtz's original findings, that horizontal stripes make a shape look taller and narrower than with vertical stripes: this is counter to the modern popular belief that vertical stripes make people look taller! Note the photo of one of the authors at he end of the paper, wearing horizontal stripes: trust the evidence! The second paper, Helmholtz illusion makes you look fit only when you are already fit, but not for everyone , notes that there are some other complications, including that the results of the above kinds of studies have shown inconsistent results. These authors point out that the degree to which a figure looks fitter is correlated with how thin the actual figure is, and in fact, for a fatter figure, the effect of the illusion can be reversed. Intersetingly, they've also noted some hysteresis in their testing: the judgement of whether a figure is fit or fat is partially a function of what the observer has previously seen. So content is important. In the illustration at the end of the article, one of the researchers is wearing vertical stripes! Maybe he thinks he is fat.","tags":"Notes","url":"//amit.visrolia.net/helmholtz.html","title":"The Helmholtz illusion"},{"text":"Scientific American","tags":"Links","url":"//amit.visrolia.net/intelligence.html","title":"You can increase your intelligence - 5 ways to maximize your cognitive potential"},{"text":"Bloody Mary is the kids game where it's said that repeating \"Bloody Mary\" to a mirror a number of times causes her appearance. It turns out that this might be true (at least in some sense)! This article, Stranger-face-in-the-mirror illusion , suggests that under dim lighting, the face processing capability of the brain takes the traits it can make out, and essentially attempts to fill-in the gaps, causing strange, deformed faces, or faces of unknown people to be observed. However, this is not a complete explanation, since some people see fantastical, monstrous or animal faces which wouldn't be expected to be part of the normal human facial processing mechanism.","tags":"Notes","url":"//amit.visrolia.net/bloodymary.html","title":"Bloody Mary"},{"text":"Bike Hacks","tags":"Links","url":"//amit.visrolia.net/bikeslang.html","title":"Dictionary of Bike Commuter Slang"},{"text":"Kevin Korb","tags":"Links","url":"//amit.visrolia.net/rsync.html","title":"Do-It-Yourself Backup System Using Rsync"},{"text":"Velominati","tags":"Links","url":"//amit.visrolia.net/therules.html","title":"The rules"},{"text":"The New Atlantis","tags":"Links","url":"//amit.visrolia.net/multitasking.html","title":"The myth of multitasking"},{"text":"Granta","tags":"Links","url":"//amit.visrolia.net/africa.html","title":"How to write about Africa"},{"text":"The Dunning-Kruger effect is the illusion of superiority that people of low ability make of themselves. In the paper by Kruger and Dunning, Unskilled and unaware of it: how difficulties in recognizing one's own incompetence lead to inflated self-assessments , the authors attibute this to the fact that the incompetent are unable to accurately evaluate their own abilities. In other words, some people can be so stupid, that they don't even realise how stupid they are. The work also suggests the opposite is also true, that people of high ability don't recognise their ability, and think that everyone else is equally capable. The idea of the paper is so wonderfully simple, that it seems obvious: that the skills in any one domain are the same skills necessary to evaluate competence in that domain. Four studies were conducted, using the domains of humour, logical reasoning (in two of the studies) and grammar. Humour is an unusal thing to apply to a study here, where different jokes were rated by the test subjects, and compared to ratings assigned by a panel of professional comedians. The logic and grammar tests were more conventional, and I believe, stronger ground for building the authors' case. The second phase of the grammar test asked the subjects to mark other subjects tests: the purpose of this was to determine if subjects were unable to assess just their own level of skill, or even the level of skill in others. Study 4 is the most interesting: having established the correlation between incompetence and over-evaluation of skills, the authors attempt to manipulate the subjects to establish a causality. They note a paradox here: to make the incompetent realise that they are incompetent, you have to make them competent. The authors did this by repeating the logic test, but gave some of the participants some of the training required to both pass the test and (as hypothesized) to evaluate competence. The finding was indeed that a little bit of training enables people to assess abilities more accurately. It's a thorough scientific paper, but I like some of the flourishes in it, such as the opening hook (a story of a bank robber), and occasional quotes (\"Thomas Jefferson once said, âhe who knows best best knows how little he knows.'\") that make it an engaging read.","tags":"Notes","url":"//amit.visrolia.net/dunningkruger.html","title":"The Dunning-Kruger effect"},{"text":"The Rosenhan Experiment \" If sanity and insanity exist, how shall we know them?\" In 1973, psychologist David Rosenhan conducted an experiment to determine the validity of psychiatric diagnosis. He did this by taking a number of sane volunteers, and having them self-admit to psychiatric institutions for having auditory hallucinations. All of the test subjects managed to get in with ease. Once the pseudopatients were in, they behaved normally (i.e. without symptoms), as they were told that they would have to get out on their own, essentially convincing the staff that they were sane. It was found that to be discharged from the facility, the patients all had to admit to having a mental illness, and to take antipsychotic medication. The eight pseudopatients were hospitalized for between 7 and 52 days before they could convince the staff to discharge them. Later, one of the institutions involved in the earlier study challenged the assertion that they could make such an error. They asked Rosenhan to send further pseudopatients which it said it would correcly identify. Rosenhan agreed, and in the following weeks, the staff at the institution identified a number of its new patients as suspicious (i.e. pseudopatients that had no psychiatric issues). The only problem was that Rosenhan hadn't sent anyone. This story was published in Science as On being sane in insane places . It's an interesting work, as it identifies that a type 2 error (a false positive) was prevalent in mental health which might be expected, since it's normally âsafer' to diagnose illness than health. However, the second part demonstrated that type 1 errors (false negatives) can also easily be generated. The general conclusion of the work is that the process of diagnosing someone as sane or insane was massively susceptible to errors. More widely, the experiences of the pseudopatients were that the psychiatric institutions were that being labelled insane (as they were in the institute) resulted in the staff treating them in a particular way, regardless of their specific behaviours and interactions. This included a significant degree of depersonalisation, and together with the structure of the environment and the staff, led to the pseudopatients experiencing powerlessness. This speaks of the attitude in wider society towards those with mental illnesses.","tags":"Notes","url":"//amit.visrolia.net/beingsane.html","title":"On being sane in insane places"},{"text":"The following papers and links are all on the discovery of the structure of DNA . The papers themselves are relatively short, and even without a chemistry background are surprisingly easy to follow. The Discovery of the Double Helix, 1951-1953 This site gives a nice overview of the story of the discovery, and some of the resulting drama (both involving the researchers, and outsiders opinions of who should and shouldn't be recognisedâ¦). Avery, MacLeod and McCarty Studies on the chemical nature of the substance inducing transformation of pneumococcal types , Journal of Experimental Medicine, Nov 1 1943 In this work, the authors show that DNA was the carrier of hereditary information, or the \"gene\", in pneumococcal bacteria. They did this by using chemical means to induce changes in the organism that are then transmitted as hereditary characteristics. Franklin and Gosling Molecular Configuration in Sodium Thymonucleate , Nature, April 25 1953 This is the paper immediately following the Watson and Crick paper below, in which the authors offer their interpretation of an X-ray diagram of a non-crystalline form of sodium thymonucleate fibres. The authors reason a number of conclusions, including that the structure is probably helical, there are prrobably two co-axial molecules, and the positioning of the phosphate groups on the outside of the structure. Watson and Crick Molecular structure of nucleic acids , Nature, April 25 1953 This is the famous paper in which the authors propose a structure for DNA (or a salt of DNA ). In it, they suggest weaknesses in previously proposed models including models with 3-chains, and models with alternative positioning of the phosphate groups. The diagram in the paper is the diagram that is now familiar as the antiparallel double-helix structure of DNA , and in the conclusions, they note that the pairing of bases on their structure suggests a copying mechanism for genetic material. At this point, the structure is a proposal and the authors note that it should be regarded as unproven. Wilkins, Stokes and Wilson Molecular structure of deoxypentose nucleic acids , Nature, April 25 1953 Another paper from the same issue of Nature, immediately following the Watson and Crick work. In this, the authors outline the experimental evidence of the helical structure, including an assessment of how the structure forms the recorded X-ray images. Franklin and Gosling Evidence for 2-chain helix in crystalline structure of sodium deoxyribonucleate , Nature, June 25 1953 A couple of months afer the 3 works above were published in Nature, Franklin and Gosling offer evidence of the structure of DNA , by correlating a number of features of the X-ray images to those expected from the structure proposed by Watson and Crick. This includes the double helix structure and helix angle, the dimensions of specific features, and the positioning of phosphate groups.","tags":"Notes","url":"//amit.visrolia.net/dna.html","title":"The discovery of the structure of DNA"}]}